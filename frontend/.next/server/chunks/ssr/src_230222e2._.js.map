{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/ai/flows/log-analyzer-flow.ts"],"sourcesContent":["\r\n'use server';\r\n/**\r\n * @fileOverview An AI flow for analyzing log data.\r\n *\r\n * - analyzeLogs - A function that takes a log string and returns a summary.\r\n * - LogAnalysisInput - The input type for the analyzeLogs function.\r\n * - LogAnalysisOutput - The return type for the analyzeLogs function.\r\n */\r\n\r\nimport { ai } from '@/ai/genkit';\r\nimport { z } from 'zod';\r\n\r\nconst LogAnalysisInputSchema = z.object({\r\n  logs: z.string().describe('The full string content of the logs to be analyzed.'),\r\n});\r\nexport type LogAnalysisInput = z.infer<typeof LogAnalysisInputSchema>;\r\n\r\nconst LogAnalysisOutputSchema = z.object({\r\n  summary: z.string().describe('A brief, one-paragraph summary of the key events in the logs.'),\r\n  errorCount: z.number().describe('The total count of ERROR level log entries.'),\r\n  warningCount: z.number().describe('The total count of WARNING level log entries.'),\r\n  criticalError: z.string().optional().describe('A detailed description of the most critical error found, if any.'),\r\n  recommendation: z.string().optional().describe('A recommended action to resolve the primary issue, if applicable.'),\r\n});\r\nexport type LogAnalysisOutput = z.infer<typeof LogAnalysisOutputSchema>;\r\n\r\n\r\nconst logAnalysisPrompt = ai.definePrompt({\r\n  name: 'logAnalysisPrompt',\r\n  input: { schema: LogAnalysisInputSchema },\r\n  output: { schema: LogAnalysisOutputSchema },\r\n  prompt: `You are a helpful DevOps assistant. Your task is to analyze the provided logs and provide a structured summary.\r\n\r\nCarefully review the logs provided below. Identify all errors and warnings. Determine the root cause of any failures.\r\n\r\nLogs:\r\n\\`\\`\\`\r\n{{{logs}}}\r\n\\`\\`\\`\r\n\r\nBased on your analysis, provide a concise summary, count the errors and warnings, identify the most critical error, and suggest a resolution. If there are no errors, you can omit the criticalError and recommendation fields.`,\r\n});\r\n\r\nconst logAnalysisFlow = ai.defineFlow(\r\n  {\r\n    name: 'logAnalysisFlow',\r\n    inputSchema: LogAnalysisInputSchema,\r\n    outputSchema: LogAnalysisOutputSchema,\r\n  },\r\n  async (input) => {\r\n    const { output } = await logAnalysisPrompt(input);\r\n    if (!output) {\r\n      throw new Error('Failed to get a response from the AI model.');\r\n    }\r\n    return output;\r\n  }\r\n);\r\n\r\nexport async function analyzeLogs(input: LogAnalysisInput): Promise<LogAnalysisOutput> {\r\n  return logAnalysisFlow(input);\r\n}\r\n"],"names":[],"mappings":";;;;;;IA2DsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-x-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/csv-monitor/StatusBadge.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport type { ProcessingStatus } from \"@/types/csv-status\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { formatDuration } from \"@/lib/utils\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\n\r\ninterface StatusBadgeProps {\r\n  status: ProcessingStatus;\r\n  startTime?: number;\r\n  endTime?: number;\r\n  now?: number | undefined; \r\n  className?: string;\r\n  error_message?: string;\r\n  stepValue?: boolean; // For 'is_tabular' to show True/False or similar\r\n  isTabularStep?: boolean; // Flag to indicate this badge is for the 'is_tabular' step\r\n}\r\n\r\nexport function getStatusClassNames(status: ProcessingStatus | 'not_started'): string {\r\n  switch (status) {\r\n    case \"ok\":\r\n      return \"bg-green-500 text-white hover:bg-green-600\";\r\n    case \"running\":\r\n      return \"bg-blue-500 text-white hover:bg-blue-600 animate-pulse\";\r\n    case \"error\":\r\n      return \"bg-red-500 text-white hover:bg-red-600\";\r\n    case \"enqueued\":\r\n      return \"bg-orange-500 text-white hover:bg-orange-600\";\r\n    case \"not_started\":\r\n      return \"bg-gray-300 text-gray-700\";\r\n    default:\r\n      return \"bg-gray-200 text-gray-800\";\r\n  }\r\n}\r\n\r\nexport function StatusBadge({ \r\n  status, \r\n  startTime, \r\n  endTime, \r\n  now, \r\n  className, \r\n  error_message,\r\n  stepValue,\r\n  isTabularStep \r\n}: StatusBadgeProps) {\r\n  let mainText = \"\";\r\n  switch (status) {\r\n    case \"ok\":\r\n      mainText = \"OK\";\r\n      break;\r\n    case \"running\":\r\n      mainText = \"Running\";\r\n      break;\r\n    case \"error\":\r\n      mainText = \"Error\";\r\n      break;\r\n    case \"enqueued\":\r\n      mainText = \"Enqueued\";\r\n      break;\r\n    default:\r\n      mainText = status;\r\n  }\r\n  let durationText = \"\";\r\n\r\n  if (isTabularStep && status === 'ok') {\r\n    if (stepValue === true) {\r\n      mainText = \"Tabular\";\r\n    } else if (stepValue === false) {\r\n      mainText = \"Non-Tabular\";\r\n    }\r\n  }\r\n\r\n  if (status === 'running' && typeof startTime === 'number' && typeof now === 'number') {\r\n    const elapsed = now - startTime;\r\n     if (elapsed >= 0) {\r\n        durationText = ` (${formatDuration(elapsed)})`;\r\n    } else {\r\n        durationText = ` (0s)`; // Should not happen often\r\n    }\r\n  } else if (status === 'ok' && typeof startTime === 'number' && typeof endTime === 'number') {\r\n    const duration = endTime - startTime;\r\n    durationText = ` (${formatDuration(duration)})`;\r\n  } else if (status === 'error' && typeof startTime === 'number' && typeof endTime === 'number') {\r\n     if (endTime > startTime) {\r\n        const duration = endTime - startTime;\r\n        durationText = ` (${formatDuration(duration)})`;\r\n     }\r\n  } else if (status === 'running') {\r\n    durationText = \"\"; \r\n  }\r\n\r\n  const badgeDisplayLabel = `${mainText}${durationText}`;\r\n  const ariaLabelContent = `Status: ${badgeDisplayLabel}${status === 'error' && error_message ? `. Error: ${error_message}` : ''}`;\r\n\r\n  const badgeElement = (\r\n    <Badge\r\n      variant=\"outline\"\r\n      className={cn(\r\n        \"border-transparent px-2.5 py-1 text-xs font-semibold\", \r\n        getStatusClassNames(status),\r\n        className\r\n      )}\r\n      aria-label={ariaLabelContent}\r\n    >\r\n      {badgeDisplayLabel}\r\n    </Badge>\r\n  );\r\n\r\n  if (status === 'error' && error_message) {\r\n    return (\r\n      <TooltipProvider delayDuration={100}>\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>{badgeElement}</TooltipTrigger>\r\n          <TooltipContent>\r\n            <p>{error_message}</p>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    );\r\n  }\r\n\r\n  return badgeElement;\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAIA;AACA;AAEA;AANA;;;;;;AAmBO,SAAS,oBAAoB,MAAwC;IAC1E,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,SAAS,YAAY,EAC1B,MAAM,EACN,SAAS,EACT,OAAO,EACP,GAAG,EACH,SAAS,EACT,aAAa,EACb,SAAS,EACT,aAAa,EACI;IACjB,IAAI,WAAW;IACf,OAAQ;QACN,KAAK;YACH,WAAW;YACX;QACF,KAAK;YACH,WAAW;YACX;QACF,KAAK;YACH,WAAW;YACX;QACF,KAAK;YACH,WAAW;YACX;QACF;YACE,WAAW;IACf;IACA,IAAI,eAAe;IAEnB,IAAI,iBAAiB,WAAW,MAAM;QACpC,IAAI,cAAc,MAAM;YACtB,WAAW;QACb,OAAO,IAAI,cAAc,OAAO;YAC9B,WAAW;QACb;IACF;IAEA,IAAI,WAAW,aAAa,OAAO,cAAc,YAAY,OAAO,QAAQ,UAAU;QACpF,MAAM,UAAU,MAAM;QACrB,IAAI,WAAW,GAAG;YACf,eAAe,CAAC,EAAE,EAAE,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,CAAC,CAAC;QAClD,OAAO;YACH,eAAe,CAAC,KAAK,CAAC,EAAE,0BAA0B;QACtD;IACF,OAAO,IAAI,WAAW,QAAQ,OAAO,cAAc,YAAY,OAAO,YAAY,UAAU;QAC1F,MAAM,WAAW,UAAU;QAC3B,eAAe,CAAC,EAAE,EAAE,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,CAAC,CAAC;IACjD,OAAO,IAAI,WAAW,WAAW,OAAO,cAAc,YAAY,OAAO,YAAY,UAAU;QAC5F,IAAI,UAAU,WAAW;YACtB,MAAM,WAAW,UAAU;YAC3B,eAAe,CAAC,EAAE,EAAE,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,CAAC,CAAC;QAClD;IACH,OAAO,IAAI,WAAW,WAAW;QAC/B,eAAe;IACjB;IAEA,MAAM,oBAAoB,GAAG,WAAW,cAAc;IACtD,MAAM,mBAAmB,CAAC,QAAQ,EAAE,oBAAoB,WAAW,WAAW,gBAAgB,CAAC,SAAS,EAAE,eAAe,GAAG,IAAI;IAEhI,MAAM,6BACJ,8OAAC,iIAAA,CAAA,QAAK;QACJ,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA,oBAAoB,SACpB;QAEF,cAAY;kBAEX;;;;;;IAIL,IAAI,WAAW,WAAW,eAAe;QACvC,qBACE,8OAAC,mIAAA,CAAA,kBAAe;YAAC,eAAe;sBAC9B,cAAA,8OAAC,mIAAA,CAAA,UAAO;;kCACN,8OAAC,mIAAA,CAAA,iBAAc;wBAAC,OAAO;kCAAE;;;;;;kCACzB,8OAAC,mIAAA,CAAA,iBAAc;kCACb,cAAA,8OAAC;sCAAG;;;;;;;;;;;;;;;;;;;;;;IAKd;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar orientation=\"vertical\" />\r\n    <ScrollBar orientation=\"horizontal\" />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;gBAAU,aAAY;;;;;;0BACvB,8OAAC;gBAAU,aAAY;;;;;;0BACvB,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/lib/config.ts"],"sourcesContent":["export type AppMode = 'demo' | 'real';\r\n\r\nexport interface AppConfig {\r\n  mode: AppMode;\r\n  apiBaseUrl: string;\r\n  wsBaseUrl: string;\r\n  pollingInterval: number; // in milliseconds\r\n}\r\n\r\nconst config: AppConfig = {\r\n  mode: (process.env.NEXT_PUBLIC_PIPELINE_MODE as AppMode) || 'real',\r\n  apiBaseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\r\n  wsBaseUrl: process.env.NEXT_PUBLIC_WS_URL || 'ws://localhost:8000',\r\n  pollingInterval: 1000, // 1 second\r\n};\r\n\r\nexport default config;"],"names":[],"mappings":";;;AASA,MAAM,SAAoB;IACxB,MAAM,4CAAsD;IAC5D,YAAY,6DAAmC;IAC/C,WAAW,2DAAkC;IAC7C,iBAAiB;AACnB;uCAEe","debugId":null}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/lib/api-client.ts"],"sourcesContent":["import config from './config';\r\nimport { CsvStatus, PipelineRun, CsvProcessingEntry } from '@/types/csv-status';\r\n\r\nclass ApiClient {\r\n  private baseUrl: string;\r\n\r\n  constructor() {\r\n    this.baseUrl = config.apiBaseUrl;\r\n    console.log(`🔧 ApiClient initialized with baseUrl: ${this.baseUrl}`);\r\n  }\r\n\r\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\r\n    const fullUrl = `${this.baseUrl}${endpoint}`;\r\n    console.log(`🚀 Attempting request to: ${fullUrl}`);\r\n    \r\n    try {\r\n      const response = await fetch(fullUrl, {\r\n        ...options,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(options.headers || {}),\r\n        },\r\n      });\r\n      console.log(`✅ Response received: ${response.status}`);\r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (err) {\r\n      console.error(`❌ Request failed for ${fullUrl}:`, err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async getPipelineStatus(): Promise<CsvProcessingEntry[]> {\r\n    return this.request<CsvProcessingEntry[]>('/api/pipeline/status');\r\n  }\r\n\r\n  async getPipelineRuns(): Promise<PipelineRun[]> {\r\n    return this.request<PipelineRun[]>('/runs');\r\n  }\r\n\r\n  async getPipelineRun(runId: string): Promise<any> {\r\n    return this.request(`/runs/${runId}`);\r\n  }\r\n\r\n  async downloadProcessedFile(runId: string): Promise<Blob> {\r\n    const response = await fetch(`${this.baseUrl}/runs/${runId}/download`);\r\n    if (!response.ok) {\r\n      throw new Error(`Download failed: ${response.statusText}`);\r\n    }\r\n    return response.blob();\r\n  }\r\n\r\n  async getStats(): Promise<{\r\n    total: number;\r\n    processing: number;\r\n    completed: number;\r\n    failed: number;\r\n  }> {\r\n    return this.request('/api/pipeline/stats');\r\n  }\r\n\r\n  async retryGeminiQuery(runId: string): Promise<any> {\r\n    return this.request(`/runs/${runId}/retry_gemini_query`, { method: 'POST' });\r\n  }\r\n}\r\n\r\nexport const apiClient = new ApiClient(); "],"names":[],"mappings":";;;AAAA;;AAGA,MAAM;IACI,QAAgB;IAExB,aAAc;QACZ,IAAI,CAAC,OAAO,GAAG,oHAAA,CAAA,UAAM,CAAC,UAAU;QAChC,QAAQ,GAAG,CAAC,CAAC,uCAAuC,EAAE,IAAI,CAAC,OAAO,EAAE;IACtE;IAEA,MAAc,QAAW,QAAgB,EAAE,UAAuB,CAAC,CAAC,EAAc;QAChF,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU;QAC5C,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,SAAS;QAElD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,SAAS;gBACpC,GAAG,OAAO;gBACV,SAAS;oBACP,gBAAgB;oBAChB,GAAI,QAAQ,OAAO,IAAI,CAAC,CAAC;gBAC3B;YACF;YACA,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,SAAS,MAAM,EAAE;YACrD,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,SAAS,MAAM,EAAE;YACjD;YACA,OAAO,MAAM,SAAS,IAAI;QAC5B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC,EAAE;YAClD,MAAM;QACR;IACF;IAEA,MAAM,oBAAmD;QACvD,OAAO,IAAI,CAAC,OAAO,CAAuB;IAC5C;IAEA,MAAM,kBAA0C;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAgB;IACrC;IAEA,MAAM,eAAe,KAAa,EAAgB;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,OAAO;IACtC;IAEA,MAAM,sBAAsB,KAAa,EAAiB;QACxD,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,SAAS,CAAC;QACrE,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,SAAS,UAAU,EAAE;QAC3D;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,WAKH;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB;IAEA,MAAM,iBAAiB,KAAa,EAAgB;QAClD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,mBAAmB,CAAC,EAAE;YAAE,QAAQ;QAAO;IAC5E;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/csv-monitor/CsvStatusTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport type { CsvProcessingEntry } from \"@/types/csv-status\";\r\nimport {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { StatusBadge, getStatusClassNames } from \"./StatusBadge\";\r\nimport { NormalizerStatusCell } from \"./NormalizerStatusCell\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ArrowUpDown, Download, CheckCircle2, XCircle, Circle, RefreshCcw, LogsIcon, Wand2 } from \"lucide-react\"; \r\nimport { ScrollArea, ScrollBar } from \"@/components/ui/scroll-area\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport React, { useState } from \"react\";\r\nimport knownHeaders from \"@/known_headers.json\"; \r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogClose } from '@/components/ui/dialog';\r\nimport { Input } from '@/components/ui/input';\r\nimport { apiClient } from '@/lib/api-client';\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { Alert } from \"@/components/ui/alert\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport type { LogAnalysisOutput } from '@/ai/flows/log-analyzer-flow';\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\ninterface CsvStatusTableProps {\r\n  data: CsvProcessingEntry[];\r\n  sortConfig: { key: keyof CsvProcessingEntry | null; direction: 'ascending' | 'descending' };\r\n  requestSort: (key: keyof CsvProcessingEntry) => void;\r\n  now: number | undefined; \r\n  onDownload: (filename: string) => void;\r\n  onRetry: (id: string) => void;\r\n  onRowClick: (entry: CsvProcessingEntry) => void;\r\n}\r\n\r\nconst truncateFields = (fields: string[], maxLength: number = 50) => {\r\n  const joined = fields.join(\", \");\r\n  if (joined.length > maxLength) {\r\n    return joined.substring(0, maxLength - 3) + \"...\";\r\n  }\r\n  return joined;\r\n};\r\n\r\nconst CRITICAL_HEADERS = [\r\n  \"digid_email\",\r\n  \"pwd_plain\",\r\n  \"pdata_id_ssn_number\",\r\n  \"pdata_id_nid_number\"\r\n];\r\n\r\nexport function CsvStatusTable({ data, sortConfig, requestSort, now, onDownload, onRetry, onRowClick }: CsvStatusTableProps) {\r\n  const getSortIndicator = (key: keyof CsvProcessingEntry) => {\r\n    if (sortConfig.key === key) {\r\n      return sortConfig.direction === 'ascending' ? ' ▲' : ' ▼';\r\n    }\r\n    return <ArrowUpDown className=\"ml-2 h-4 w-4 opacity-50 group-hover:opacity-100\" />;\r\n  };\r\n  \r\n  const [moreIdx, setMoreIdx] = useState<string | null>(null);\r\n  const [moreDialogEntryId, setMoreDialogEntryId] = useState<string | null>(null);\r\n  const [logDialogOpen, setLogDialogOpen] = useState(false);\r\n  const [logDialogEntry, setLogDialogEntry] = useState<CsvProcessingEntry | null>(null);\r\n  const [logContent, setLogContent] = useState<string>('');\r\n  const [logSearch, setLogSearch] = useState('');\r\n  const [logLoading, setLogLoading] = useState(false);\r\n  const [aiLoading, setAiLoading] = useState(false);\r\n  const [aiResult, setAiResult] = useState<Record<string, LogAnalysisOutput | { error: string }>>({});\r\n\r\n  const handleOpenLogDialog = async (entry: CsvProcessingEntry) => {\r\n    setLogDialogEntry(entry);\r\n    setLogDialogOpen(true);\r\n    setLogLoading(true);\r\n    try {\r\n      const run = await apiClient.getPipelineRun(entry.id);\r\n      setLogContent(run.log_contents || 'No logs found.');\r\n    } catch (e) {\r\n      setLogContent('Failed to load logs.');\r\n    }\r\n    setLogLoading(false);\r\n  };\r\n\r\n  const handleDownloadLog = () => {\r\n    if (!logDialogEntry) return;\r\n    const blob = new Blob([logContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${logDialogEntry.filename}.log`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleAnalyzeLogs = async () => {\r\n    if (!logDialogEntry) return;\r\n    setAiLoading(true);\r\n    try {\r\n      const result = await import(\"@/ai/flows/log-analyzer-flow\").then(m => m.analyzeLogs({ logs: logContent }));\r\n      setAiResult(prev => ({ ...prev, [logDialogEntry.id]: result }));\r\n    } catch (e) {\r\n      setAiResult(prev => ({ ...prev, [logDialogEntry.id]: { error: \"Failed to analyze logs.\" } }));\r\n    }\r\n    setAiLoading(false);\r\n  };\r\n\r\n  // Helper to highlight search matches in log lines\r\n  function highlightMatches(line: string, search: string) {\r\n    if (!search) return line;\r\n    const regex = new RegExp(`(${search.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\r\n    const parts = line.split(regex);\r\n    return parts.map((part, i) =>\r\n      regex.test(part)\r\n        ? <mark key={i} style={{ background: 'yellow', color: 'black', padding: 0 }}>{part}</mark>\r\n        : part\r\n    );\r\n  }\r\n\r\n  const moreDialogEntry = React.useMemo(\r\n    () => data.find(e => e.id === moreDialogEntryId) || null,\r\n    [data, moreDialogEntryId]\r\n  );\r\n\r\n  // Add state for the Gemini Subsample Rows dialog\r\n  const [sampleRowsDialogId, setSampleRowsDialogId] = useState<string | null>(null);\r\n  const sampleRowsDialogEntry = React.useMemo(\r\n    () => data.find(e => e.id === sampleRowsDialogId) || null,\r\n    [data, sampleRowsDialogId]\r\n  );\r\n\r\n  // Add or import the robust UTC formatter at the top (copy from FileDetailDialog if needed):\r\n  function formatUTCDate(dateString?: string): string {\r\n    if (!dateString) return 'N/A';\r\n    let d: Date;\r\n    if (dateString.endsWith('Z') || dateString.match(/\\+\\d{2}:\\d{2}$/)) {\r\n      d = new Date(dateString);\r\n    } else {\r\n      d = new Date(dateString.replace(' ', 'T') + 'Z');\r\n    }\r\n    return `${d.getUTCFullYear()}-${String(d.getUTCMonth()+1).padStart(2,'0')}-${String(d.getUTCDate()).padStart(2,'0')} ${String(d.getUTCHours()).padStart(2,'0')}:${String(d.getUTCMinutes()).padStart(2,'0')}:${String(d.getUTCSeconds()).padStart(2,'0')} UTC`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <ScrollArea className=\"h-[500px] rounded-md border shadow-sm\">\r\n      <table className=\"min-w-full border-collapse relative\">\r\n        <TableHeader className=\"bg-muted sticky top-0 z-10\">\r\n          <TableRow>\r\n            <TableHead>\r\n                <Button variant=\"ghost\" onClick={() => requestSort('filename')} className=\"px-2 py-1 group text-xs\">\r\n                Filename {getSortIndicator('filename')}\r\n              </Button>\r\n            </TableHead>\r\n            <TableHead>\r\n              <Button variant=\"ghost\" onClick={() => requestSort('insertion_date')} className=\"px-2 py-1 group\">\r\n                Insertion Date {getSortIndicator('insertion_date')}\r\n              </Button>\r\n            </TableHead>\r\n            <TableHead>\r\n               <span className=\"px-2 py-1 group text-xs\">Classifier</span>\r\n            </TableHead>\r\n            <TableHead>\r\n                <Button variant=\"ghost\" disabled className=\"px-2 py-1 group text-xs\">\r\n                File Type\r\n              </Button>\r\n            </TableHead>\r\n            <TableHead>\r\n              <span className=\"px-2 py-1 group text-xs\">Sampling</span>\r\n            </TableHead>\r\n            <TableHead>\r\n              <span className=\"px-2 py-1 group text-xs\">Gemini Query</span>\r\n            </TableHead>\r\n            <TableHead>Extracted Fields</TableHead>\r\n            <TableHead>\r\n              <span className=\"px-2 py-1 group text-xs\">Normalizer</span>\r\n            </TableHead>\r\n            <TableHead className=\"text-right px-4\">Actions</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={9} className=\"h-24 text-center text-muted-foreground\">\r\n                No files found. Try uploading a new file or clearing your filters.\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            data.map((entry) => {\r\n              const isFullyCompleted = \r\n                entry.stage_stats?.classification?.status === 'ok' &&\r\n                entry.stage_stats?.sampling?.status === 'ok' &&\r\n                entry.stage_stats?.gemini_query?.status === 'ok' &&\r\n                entry.stage_stats?.normalization?.status === 'ok';\r\n\r\n              const hasError = [\r\n                entry.stage_stats?.classification,\r\n                entry.stage_stats?.sampling,\r\n                entry.stage_stats?.gemini_query,\r\n                entry.stage_stats?.normalization\r\n              ].some(step => step && step.status === 'error');\r\n\r\n              return (\r\n                <TableRow key={entry.id} className=\"hover:bg-muted/20 transition-colors cursor-pointer\" onClick={() => onRowClick(entry)}>\r\n                    <TableCell className=\"font-medium py-3 px-4 whitespace-nowrap text-xs max-w-[260px] overflow-hidden text-ellipsis\" title={entry.filename}>\r\n                      <TooltipProvider delayDuration={100}>\r\n                        <Tooltip>\r\n                          <TooltipTrigger asChild>\r\n                            <span className=\"block overflow-hidden text-ellipsis whitespace-nowrap max-w-[240px]\">{entry.filename}</span>\r\n                          </TooltipTrigger>\r\n                          <TooltipContent>{entry.filename}</TooltipContent>\r\n                        </Tooltip>\r\n                      </TooltipProvider>\r\n                    </TableCell>\r\n                    <TableCell className=\"py-3 px-4 text-sm text-muted-foreground text-nowrap\">\r\n                      {formatUTCDate(entry.insertion_date)}\r\n                  </TableCell>\r\n                  <TableCell className=\"py-3 px-4\">\r\n                    <StatusBadge \r\n                      status={entry.status === 'enqueued' ? 'enqueued' : entry.stage_stats?.classification?.status} \r\n                      startTime={entry.stage_stats?.classification?.start_time ? new Date(entry.stage_stats.classification.start_time).getTime() : undefined}\r\n                      endTime={entry.stage_stats?.classification?.end_time ? new Date(entry.stage_stats.classification.end_time).getTime() : undefined}\r\n                      error_message={entry.stage_stats?.classification?.error_message}\r\n                      now={now} \r\n                    />\r\n                  </TableCell>\r\n                    <TableCell className=\"py-3 px-4 text-center text-xs\">\r\n                    <TooltipProvider delayDuration={100}>\r\n                      <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                          <span className=\"font-medium\">\r\n                            {(() => {\r\n                              const step = entry.stage_stats?.classification;\r\n                              if (step?.status === 'ok') {\r\n                                return 'Tabular'; // or other logic if you want to distinguish\r\n                              }\r\n                              return '';\r\n                            })()}\r\n                          </span>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>\r\n                          <p className=\"capitalize\">\r\n                           {(() => {\r\n                              const step = entry.stage_stats?.classification;\r\n                              if (step?.status === 'ok') {\r\n                                return 'File type: Tabular';\r\n                              }\r\n                              return 'Status: Enqueued';\r\n                            })()}\r\n                          </p>\r\n                        </TooltipContent>\r\n                      </Tooltip>\r\n                    </TooltipProvider>\r\n                  </TableCell>\r\n                  <TableCell className=\"py-3 px-4 align-middle\">\r\n                    <div className=\"relative flex flex-col items-center justify-center\" style={{ minHeight: 10 }}>\r\n                      <div className=\"flex items-center justify-center h-full\">\r\n                        <StatusBadge\r\n                          status={entry.stage_stats?.sampling?.status}\r\n                          startTime={entry.stage_stats?.sampling?.start_time ? new Date(entry.stage_stats.sampling.start_time).getTime() : undefined}\r\n                          endTime={entry.stage_stats?.sampling?.end_time ? new Date(entry.stage_stats.sampling.end_time).getTime() : undefined}\r\n                          error_message={entry.stage_stats?.sampling?.error_message}\r\n                          now={now}\r\n                        />\r\n                      </div>\r\n                      {entry.stage_stats?.sampling?.status === 'ok' && entry.gemini_sample_rows && entry.gemini_sample_rows.length > 0 && (\r\n                        <span\r\n                          className=\"underline text-blue-600 cursor-pointer text-xs mt-1\"\r\n                          style={{ position: 'absolute', top: '100%', left: '50%', transform: 'translateX(-50%)', marginTop: 4 }}\r\n                          onClick={e => {\r\n                            e.stopPropagation();\r\n                            setSampleRowsDialogId(entry.id);\r\n                          }}\r\n                        >\r\n                          Inspect\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"py-3 px-4\">\r\n                    <StatusBadge \r\n                      status={entry.stage_stats?.gemini_query?.status}\r\n                      startTime={entry.stage_stats?.gemini_query?.start_time ? new Date(entry.stage_stats.gemini_query.start_time).getTime() : undefined}\r\n                      endTime={entry.stage_stats?.gemini_query?.end_time ? new Date(entry.stage_stats.gemini_query.end_time).getTime() : undefined}\r\n                      error_message={entry.stage_stats?.gemini_query?.error_message}\r\n                      now={now}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className=\"py-3 px-4 text-sm text-muted-foreground\" title={entry.extracted_fields ? entry.extracted_fields.join(\", \") : \"No fields extracted\"}>\r\n                    {(() => {\r\n                      if (!entry.extracted_fields) {\r\n                        return <span className=\"text-muted-foreground\">No fields extracted</span>;\r\n                      }\r\n                      const headers = entry.extracted_fields.slice(0, 4);\r\n                      const prioritized = headers.filter(h => CRITICAL_HEADERS.includes(h));\r\n                      const rest = headers.filter(h => !CRITICAL_HEADERS.includes(h));\r\n                      const sortedHeaders = [...prioritized, ...rest];\r\n\r\n                      return sortedHeaders.map((field, idx) => {\r\n                        let color: string | undefined = undefined;\r\n                        let fontWeight: string | undefined = undefined;\r\n                        if (CRITICAL_HEADERS.includes(field)) {\r\n                          color = 'black';\r\n                          fontWeight = 'bold';\r\n                        } else if (!(field in knownHeaders)) {\r\n                          color = 'orange';\r\n                        }\r\n                        return (\r\n                          <Badge key={`${field}-${idx}`} variant=\"secondary\" style={{ color, fontWeight }} className=\"mr-1 mb-1 px-1.5 py-0.5 text-xs\">\r\n                            {field}\r\n                          </Badge>\r\n                        );\r\n                      });\r\n                    })()}\r\n                    {entry.stage_stats?.gemini_query?.status === 'ok' && !entry.stage_stats?.gemini_query?.error_message && (\r\n                      <span\r\n                        className=\"underline text-blue-600 cursor-pointer text-xs ml-1\"\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          setMoreDialogEntryId(entry.id);\r\n                        }}\r\n                      >\r\n                        More\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell className=\"py-3 px-4\">\r\n                    <StatusBadge\r\n                      status={entry.stage_stats?.normalization?.status}\r\n                      startTime={entry.stage_stats?.normalization?.start_time ? new Date(entry.stage_stats.normalization.start_time).getTime() : undefined}\r\n                      endTime={entry.stage_stats?.normalization?.end_time ? new Date(entry.stage_stats.normalization.end_time).getTime() : undefined}\r\n                      error_message={entry.stage_stats?.normalization?.error_message}\r\n                      now={now}\r\n                    />\r\n                  </TableCell>\r\n                  {/* Remove normalizer_checks substages columns */}\r\n                  <TableCell className=\"py-3 px-4 text-right\">\r\n                    <div className=\"flex items-center justify-end space-x-2\">\r\n                       {hasError && (\r\n                        <>\r\n                          {entry.stage_stats?.gemini_query?.status === 'error' && (\r\n                            <TooltipProvider delayDuration={100}>\r\n                              <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                  <Button variant=\"outline\" size=\"icon\" onClick={(e) => { e.stopPropagation(); onRetry(entry.id); }}>\r\n                                    <RefreshCcw className=\"h-4 w-4\" />\r\n                                  </Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Retry</TooltipContent>\r\n                              </Tooltip>\r\n                            </TooltipProvider>\r\n                          )}\r\n                          <TooltipProvider delayDuration={100}>\r\n                            <Tooltip>\r\n                              <TooltipTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"icon\" onClick={(e) => { e.stopPropagation(); handleOpenLogDialog(entry); }}>\r\n                                  <LogsIcon className=\"h-4 w-4\" />\r\n                        </Button>\r\n                              </TooltipTrigger>\r\n                              <TooltipContent>Logs</TooltipContent>\r\n                            </Tooltip>\r\n                          </TooltipProvider>\r\n                        </>\r\n                      )}\r\n                      {isFullyCompleted && (\r\n                          <>\r\n                            <TooltipProvider delayDuration={100}>\r\n                              <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                        <Button variant=\"outline\" size=\"sm\" onClick={(e) => { e.stopPropagation(); onDownload(entry.filename); }}>\r\n                                    <Download className=\"mr-0 h-3.5 w-3.5\" />\r\n                                  </Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Download</TooltipContent>\r\n                              </Tooltip>\r\n                            </TooltipProvider>\r\n                            <TooltipProvider delayDuration={100}>\r\n                              <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                  <Button variant=\"outline\" size=\"sm\" onClick={(e) => { e.stopPropagation(); handleOpenLogDialog(entry); }}>\r\n                                    <LogsIcon className=\"mr-0 h-3.5 w-3.5\" />\r\n                        </Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Logs</TooltipContent>\r\n                              </Tooltip>\r\n                            </TooltipProvider>\r\n                          </>\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })\r\n          )}\r\n        </TableBody>\r\n      </table>\r\n      <ScrollBar orientation=\"horizontal\" />\r\n    </ScrollArea>\r\n      <Dialog open={logDialogOpen} onOpenChange={setLogDialogOpen}>\r\n        <DialogContent className=\"w-[80vw] max-w-10xl max-h-[80vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>Logs for {logDialogEntry?.filename}</DialogTitle>\r\n            <DialogDescription>Inspect the processing logs for this file. Use the search bar to find specific warnings or messages.</DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Input\r\n              placeholder=\"Search logs...\"\r\n              value={logSearch}\r\n              onChange={e => setLogSearch(e.target.value)}\r\n              className=\"w-full\"\r\n            />\r\n            <Button variant=\"secondary\" onClick={handleDownloadLog} disabled={!logContent}>\r\n              <Download className=\"h-4 w-4 mr-1\" /> Download\r\n            </Button>\r\n            <TooltipProvider delayDuration={100}>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"default\" onClick={handleAnalyzeLogs} disabled={!logContent || aiLoading} className=\"flex items-center\">\r\n                    <Wand2 className=\"h-4 w-4 mr-1\" /> Analyze with AI\r\n                    {aiLoading && <span className=\"ml-2 animate-spin\"><Loader2 className=\"h-4 w-4\" /></span>}\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>Analyze this log with AI</TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n          <ScrollArea className=\"h-[50vh] border rounded bg-muted p-2\">\r\n            <pre className=\"whitespace-pre-wrap text-xs font-mono\">\r\n              {logLoading ? 'Loading logs...' :\r\n                logContent\r\n                  .split('\\n')\r\n                  .filter(line => !logSearch || line.toLowerCase().includes(logSearch.toLowerCase()))\r\n                  .map((line, idx) => <React.Fragment key={idx}>{highlightMatches(line, logSearch)}{\"\\n\"}</React.Fragment>)\r\n              }\r\n            </pre>\r\n          </ScrollArea>\r\n          {logDialogEntry && aiResult[logDialogEntry.id] && (\r\n            <div className=\"mt-4\">\r\n              {'error' in aiResult[logDialogEntry.id] ? (\r\n                <Alert variant=\"destructive\">{(aiResult[logDialogEntry.id] as { error: string }).error}</Alert>\r\n              ) : (\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>AI Log Analysis</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p><strong>Summary:</strong> {(aiResult[logDialogEntry.id] as LogAnalysisOutput).summary}</p>\r\n                    <p><strong>Errors:</strong> {(aiResult[logDialogEntry.id] as LogAnalysisOutput).errorCount}</p>\r\n                    <p><strong>Warnings:</strong> {(aiResult[logDialogEntry.id] as LogAnalysisOutput).warningCount}</p>\r\n                    {(aiResult[logDialogEntry.id] as LogAnalysisOutput).criticalError && <p><strong>Critical Error:</strong> {(aiResult[logDialogEntry.id] as LogAnalysisOutput).criticalError}</p>}\r\n                    {(aiResult[logDialogEntry.id] as LogAnalysisOutput).recommendation && <p><strong>Recommendation:</strong> {(aiResult[logDialogEntry.id] as LogAnalysisOutput).recommendation}</p>}\r\n                  </CardContent>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      {/* More Dialog for all fields and subsample rows */}\r\n      <Dialog open={!!moreDialogEntry} onOpenChange={open => setMoreDialogEntryId(open ? moreDialogEntryId : null)}>\r\n        <DialogContent className=\"max-w-5xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>Extracted Fields</DialogTitle>\r\n          </DialogHeader>\r\n          {moreDialogEntry && (\r\n            <div className=\"space-y-4 overflow-x-auto\">\r\n              <div>\r\n                <strong>Fields ({moreDialogEntry.extracted_fields ? moreDialogEntry.extracted_fields.length : 0}):</strong>\r\n                <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                  {moreDialogEntry.extracted_fields ? moreDialogEntry.extracted_fields.map((field, idx) => {\r\n                    let color: string | undefined = undefined;\r\n                    let fontWeight: string | undefined = undefined;\r\n                    if (CRITICAL_HEADERS.includes(field)) {\r\n                      color = 'black';\r\n                      fontWeight = 'bold';\r\n                    } else if (!(field in knownHeaders)) {\r\n                      color = 'orange';\r\n                    }\r\n                    return (\r\n                      <Badge key={`${field}-${idx}`} variant=\"secondary\" style={{ color, fontWeight }} className=\"px-1.5 py-0.5 text-xs\">\r\n                        {field}\r\n                      </Badge>\r\n                    );\r\n                  }) : <span className=\"text-muted-foreground\">No fields extracted</span>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      {/* Add the new Gemini Subsample Rows dialog */}\r\n      <Dialog open={!!sampleRowsDialogEntry} onOpenChange={open => setSampleRowsDialogId(open ? sampleRowsDialogId : null)}>\r\n        <DialogContent className=\"max-w-3xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>Gemini Subsample Rows</DialogTitle>\r\n            <DialogDescription>Sample of the rows sent to Gemini for this file.</DialogDescription>\r\n          </DialogHeader>\r\n          {sampleRowsDialogEntry && sampleRowsDialogEntry.gemini_sample_rows && sampleRowsDialogEntry.gemini_sample_rows.length > 0 ? (\r\n            <div className=\"mt-2 border rounded bg-muted w-full\" style={{ minWidth: 400, maxHeight: 320, overflowY: 'auto', overflowX: 'auto' }}>\r\n              {sampleRowsDialogEntry.gemini_sample_rows.slice(0, 10).map((line, ridx) => (\r\n                <pre\r\n                  key={ridx}\r\n                  className=\"font-mono text-xs px-2 py-1 border-b border-border last:border-b-0 whitespace-pre\"\r\n                  style={{ margin: 0 }}\r\n                >\r\n                  {line}\r\n                </pre>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-muted-foreground\">No sample rows available.</p>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getStatusColor(status: string): string {\r\n  switch (status) {\r\n    case 'completed':\r\n      return 'bg-green-500';\r\n    case 'processing':\r\n      return 'bg-blue-500';\r\n    case 'failed':\r\n      return 'bg-red-500';\r\n    default:\r\n      return 'bg-gray-500';\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/csv-monitor/StatCard.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport type { LucideIcon } from \"lucide-react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  description?: string;\r\n  Icon?: LucideIcon;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport function StatCard({ title, value, description, Icon, children }: StatCardProps) {\r\n  return (\r\n    <Card className=\"shadow-lg\">\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\r\n        {Icon && <Icon className=\"h-5 w-5 text-primary\" />}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"text-2xl font-bold text-foreground\">{value}</div>\r\n        {description && <p className=\"text-xs text-muted-foreground pt-1\">{description}</p>}\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AAHA;;;AAaO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAiB;IACnF,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAA6C;;;;;;oBACjE,sBAAQ,8OAAC;wBAAK,WAAU;;;;;;;;;;;;0BAE3B,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCAAsC;;;;;;oBACpD,6BAAe,8OAAC;wBAAE,WAAU;kCAAsC;;;;;;oBAClE;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 2294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/csv-monitor/FileUpload.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { UploadCloud } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface FileUploadProps {\r\n  onFileUpload: (files: File[]) => void;\r\n  className?: string;\r\n}\r\n\r\nexport function FileUpload({ onFileUpload, className }: FileUploadProps) {\r\n  const { toast } = useToast();\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    if (acceptedFiles.length > 0) {\r\n      onFileUpload(acceptedFiles);\r\n      toast({\r\n        title: `${acceptedFiles.length} file(s) added to queue`,\r\n        description: `Started processing: ${acceptedFiles.map(f => f.name).join(', ')}`,\r\n        variant: 'default',\r\n      });\r\n    }\r\n  }, [onFileUpload, toast]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'text/csv': ['.csv'],\r\n      'text/tab-separated-values': ['.tsv'],\r\n      'text/plain': ['.txt', '.dat', '.data', '.psv'],\r\n      'application/vnd.ms-excel': ['.xls'],\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\r\n      'application/vnd.oasis.opendocument.spreadsheet': ['.ods'],\r\n      'application/zip': ['.zip'],\r\n      'application/x-7z-compressed': ['.7z'],\r\n      'application/x-tar': ['.tar'],\r\n      'application/gzip': ['.gz', '.tar.gz', '.tgz'],\r\n      'application/x-rar-compressed': ['.rar'],\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      className={`flex flex-col items-center justify-center w-full h-64 border-2 border-dashed rounded-lg cursor-pointer bg-card hover:bg-muted transition-colors ${\r\n        isDragActive ? 'border-primary' : 'border-border'\r\n      } ${className}`}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <div className=\"flex flex-col items-center justify-center pt-5 pb-6 text-center\">\r\n        <UploadCloud className=\"w-10 h-10 mb-4 text-muted-foreground\" />\r\n        {isDragActive ? (\r\n          <p className=\"text-lg font-semibold text-primary\">Drop the files here ...</p>\r\n        ) : (\r\n          <>\r\n            <p className=\"mb-2 text-sm text-muted-foreground\">\r\n              <span className=\"font-semibold text-primary\">Click to upload</span> or drag and drop\r\n            </p>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              <span className=\"block\">Supported files: <b>CSV, TSV, PSV, DAT, DATA, TXT, XLS, XLSX, ODS</b></span>\r\n              <span className=\"block\">Compressed: <b>ZIP, 7Z, TAR, TAR.GZ, TGZ, GZ, RAR</b></span>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AALA;;;;;;AAYO,SAAS,WAAW,EAAE,YAAY,EAAE,SAAS,EAAmB;IACrE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC1B,IAAI,cAAc,MAAM,GAAG,GAAG;YAC5B,aAAa;YACb,MAAM;gBACJ,OAAO,GAAG,cAAc,MAAM,CAAC,uBAAuB,CAAC;gBACvD,aAAa,CAAC,oBAAoB,EAAE,cAAc,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO;gBAC/E,SAAS;YACX;QACF;IACF,GAAG;QAAC;QAAc;KAAM;IAExB,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,cAAW,AAAD,EAAE;QAChE;QACA,QAAQ;YACN,YAAY;gBAAC;aAAO;YACpB,6BAA6B;gBAAC;aAAO;YACrC,cAAc;gBAAC;gBAAQ;gBAAQ;gBAAS;aAAO;YAC/C,4BAA4B;gBAAC;aAAO;YACpC,qEAAqE;gBAAC;aAAQ;YAC9E,kDAAkD;gBAAC;aAAO;YAC1D,mBAAmB;gBAAC;aAAO;YAC3B,+BAA+B;gBAAC;aAAM;YACtC,qBAAqB;gBAAC;aAAO;YAC7B,oBAAoB;gBAAC;gBAAO;gBAAW;aAAO;YAC9C,gCAAgC;gBAAC;aAAO;QAC1C;IACF;IAEA,qBACE,8OAAC;QACE,GAAG,cAAc;QAClB,WAAW,CAAC,gJAAgJ,EAC1J,eAAe,mBAAmB,gBACnC,CAAC,EAAE,WAAW;;0BAEf,8OAAC;gBAAO,GAAG,eAAe;;;;;;0BAC1B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;oBACtB,6BACC,8OAAC;wBAAE,WAAU;kCAAqC;;;;;6CAElD;;0CACE,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;wCAAK,WAAU;kDAA6B;;;;;;oCAAsB;;;;;;;0CAErE,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;wCAAK,WAAU;;4CAAQ;0DAAiB,8OAAC;0DAAE;;;;;;;;;;;;kDAC5C,8OAAC;wCAAK,WAAU;;4CAAQ;0DAAY,8OAAC;0DAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrD","debugId":null}},
    {"offset": {"line": 2479, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/csv-monitor/FileDetailDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport type { CsvProcessingEntry, ProcessingStep } from \"@/types/csv-status\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { getStatusClassNames } from \"./StatusBadge\";\r\nimport { formatDuration } from \"@/lib/utils\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport knownHeaders from \"@/known_headers.json\"; \r\nimport React, { useState } from \"react\";\r\n\r\ninterface FileDetailDialogProps {\r\n  entry: CsvProcessingEntry | null;\r\n  isOpen: boolean;\r\n  onOpenChange: (isOpen: boolean) => void;\r\n}\r\n\r\nconst DetailRow = ({ label, value }: { label: string, value: React.ReactNode }) => (\r\n  <div className=\"grid grid-cols-3 gap-4 py-2 border-b border-border/50\">\r\n    <dt className=\"text-sm font-medium text-muted-foreground\">{label}</dt>\r\n    <dd className=\"text-sm col-span-2\">{value}</dd>\r\n  </div>\r\n);\r\n\r\n// Remove StepDetailRow and old per-stage logic\r\n\r\nconst CRITICAL_HEADERS = [\r\n  \"digid_email\",\r\n  \"pwd_plain\",\r\n  \"pdata_id_ssn_number\",\r\n  \"pdata_id_nid_number\"\r\n];\r\n\r\nfunction formatFileSize(bytes?: number): string {\r\n  if (bytes == null) return 'N/A';\r\n  if (bytes >= 1024 * 1024) return (bytes / (1024 * 1024)).toFixed(2) + ' MB';\r\n  if (bytes >= 1024) return (bytes / 1024).toFixed(2) + ' KB';\r\n  return bytes + ' bytes';\r\n}\r\n\r\n// Utility to format line numbers as ranges\r\nfunction formatLineRanges(lines?: number[]): string[] {\r\n  if (!lines || lines.length === 0) return ['None'];\r\n  const sorted = [...lines].sort((a, b) => a - b);\r\n  const ranges: string[] = [];\r\n  let start = sorted[0];\r\n  let end = sorted[0];\r\n  for (let i = 1; i < sorted.length; i++) {\r\n    if (sorted[i] === end + 1) {\r\n      end = sorted[i];\r\n    } else {\r\n      ranges.push(start === end ? `${start}` : `[${start}-${end}]`);\r\n      start = end = sorted[i];\r\n    }\r\n  }\r\n  ranges.push(start === end ? `${start}` : `[${start}-${end}]`);\r\n  return ranges;\r\n}\r\n\r\n// Update formatUTCDate to robustly handle ISO 8601 with 'Z' or '+00:00', and display as UTC\r\nfunction formatUTCDate(dateString?: string): string {\r\n  if (!dateString) return 'N/A';\r\n  // Always parse as UTC\r\n  let d: Date;\r\n  if (dateString.endsWith('Z') || dateString.match(/\\+\\d{2}:\\d{2}$/)) {\r\n    d = new Date(dateString);\r\n  } else {\r\n    // fallback: treat as UTC\r\n    d = new Date(dateString.replace(' ', 'T') + 'Z');\r\n  }\r\n  return `${d.getUTCFullYear()}-${String(d.getUTCMonth()+1).padStart(2,'0')}-${String(d.getUTCDate()).padStart(2,'0')} ${String(d.getUTCHours()).padStart(2,'0')}:${String(d.getUTCMinutes()).padStart(2,'0')}:${String(d.getUTCSeconds()).padStart(2,'0')} UTC`;\r\n}\r\n\r\nexport function FileDetailDialog({ entry, isOpen, onOpenChange }: FileDetailDialogProps) {\r\n  const [showAllInvalidLines, setShowAllInvalidLines] = useState(false);\r\n\r\n  if (!entry) return null;\r\n\r\n  const totalDuration = entry.duration_ms\r\n    ? formatDuration(entry.duration_ms)\r\n    : (entry.start_time && entry.status === 'running'\r\n        ? formatDuration(Date.parse(new Date().toISOString()) - Date.parse(entry.start_time)) + ' (running)'\r\n        : \"N/A\");\r\n\r\n  const invalidLineRanges = formatLineRanges(entry.invalid_line_numbers);\r\n\r\n  // Info message for UTC0\r\n  const utcInfo = (\r\n    <div className=\"mb-2 text-xs text-muted-foreground italic\">\r\n      All times below are shown in UTC (Coordinated Universal Time, UTC+0).\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"max-w-2xl\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"truncate\">{entry.filename}</DialogTitle>\r\n          <DialogDescription>\r\n            Detailed processing information and status for this file.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        {utcInfo}\r\n        <ScrollArea className=\"h-[60vh] pr-4\">\r\n            <div className=\"space-y-4\">\r\n                <dl className=\"divide-y divide-border/50\">\r\n                    <DetailRow label=\"Insertion Date\" value={formatUTCDate(entry.insertion_date)} />\r\n                    <DetailRow label=\"Processing Start\" value={formatUTCDate(entry.start_time)} />\r\n                    <DetailRow label=\"Processing End\" value={formatUTCDate(entry.end_time)} />\r\n                    <DetailRow label=\"Total Duration\" value={totalDuration} />\r\n                    <DetailRow label=\"Original File Size\" value={formatFileSize(entry.original_file_size)} />\r\n                    <DetailRow label=\"Original Row Count\" value={entry.original_row_count?.toLocaleString() ?? 'N/A'} />\r\n                    {entry.final_file_size != null && (\r\n                      <DetailRow label=\"Final File Size\" value={formatFileSize(entry.final_file_size)} />\r\n                    )}\r\n                    {entry.final_row_count != null && (\r\n                      <DetailRow label=\"Final Row Count\" value={entry.final_row_count.toLocaleString()} />\r\n                    )}\r\n                    <DetailRow label=\"Valid Row Percentage\" value={entry.valid_row_percentage != null ? entry.valid_row_percentage.toFixed(2) + '%' : 'N/A'} />\r\n                    <DetailRow\r\n                      label=\"Invalid Lines\"\r\n                      value={\r\n                        <>\r\n                          {showAllInvalidLines\r\n                            ? invalidLineRanges.join(', ')\r\n                            : invalidLineRanges.slice(0, 5).join(', ') + (invalidLineRanges.length > 5 ? ', ...' : '')}\r\n                          {invalidLineRanges.length > 5 && (\r\n                            <button\r\n                              onClick={() => setShowAllInvalidLines((v) => !v)}\r\n                              className=\"ml-2 text-xs underline text-blue-600 hover:text-blue-800\"\r\n                              style={{ background: 'none', border: 'none', cursor: 'pointer', padding: 0 }}\r\n                            >\r\n                              {showAllInvalidLines ? 'Show less' : `Show all (${invalidLineRanges.length})`}\r\n                            </button>\r\n                          )}\r\n                        </>\r\n                      }\r\n                    />\r\n                    <DetailRow label=\"AI Model Used\" value={entry.ai_model ?? 'N/A'} />\r\n                    <DetailRow label=\"Gemini Input Tokens\" value={entry.gemini_input_tokens?.toLocaleString() ?? 'N/A'} />\r\n                    <DetailRow label=\"Gemini Output Tokens\" value={entry.gemini_output_tokens?.toLocaleString() ?? 'N/A'} />\r\n                    <DetailRow label=\"Gemini Total Tokens\" value={entry.gemini_total_tokens?.toLocaleString() ?? 'N/A'} />\r\n                    <DetailRow label=\"Estimated Cost\" value={typeof entry.estimated_cost === 'number' ? `$${entry.estimated_cost.toFixed(4)}` : 'N/A'} />\r\n                    <DetailRow label=\"Overall Status\" value={\r\n                        <Badge variant=\"outline\" className={getStatusClassNames(entry.status)}>\r\n                            {entry.status}\r\n                        </Badge>\r\n                    } />\r\n                </dl>\r\n\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold mt-6 mb-2\">Processing Steps</h3>\r\n                    <Table>\r\n                        <TableHeader>\r\n                        <TableRow>\r\n                            <TableHead>Step</TableHead>\r\n                            <TableHead>Duration</TableHead>\r\n                            <TableHead>Status</TableHead>\r\n                            <TableHead>Details</TableHead>\r\n                        </TableRow>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                          {['classification', 'sampling', 'gemini_query', 'normalization'].map((stage) => {\r\n                            const stat = entry.stage_stats?.[stage];\r\n                            let duration = 'N/A';\r\n                            if (stat?.start_time && stat?.end_time) {\r\n                              const ms = Date.parse(stat.end_time) - Date.parse(stat.start_time);\r\n                              duration = ms < 1000 ? ms.toFixed(2) + ' ms' : (ms/1000).toFixed(2) + ' s';\r\n                            }\r\n                            let details = 'None';\r\n                            if (stat?.error_message) details = stat.error_message;\r\n                            else if (stat?.warnings && stat.warnings.length > 0) details = stat.warnings.join(', ');\r\n                            return (\r\n                              <TableRow key={stage}>\r\n                                <TableCell className=\"font-medium\">{stage.charAt(0).toUpperCase() + stage.slice(1).replace('_', ' ')}</TableCell>\r\n                                <TableCell>{duration}</TableCell>\r\n                                <TableCell>\r\n                                  <Badge variant=\"outline\" className={getStatusClassNames(stat?.status)}>\r\n                                    {stat?.status}\r\n                                  </Badge>\r\n                                </TableCell>\r\n                                <TableCell className=\"text-xs text-muted-foreground\">{details}</TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold mt-6 mb-2\">Extracted Fields</h3>\r\n                    {entry.extracted_fields && entry.extracted_fields.length > 0 ? (\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                        {entry.extracted_fields.map((field, idx) => {\r\n                          let color: string | undefined = undefined;\r\n                          let fontWeight: string | undefined = undefined;\r\n                          if (CRITICAL_HEADERS.includes(field)) fontWeight = 'bold';\r\n                          else if (!(field in knownHeaders)) color = 'orange';\r\n                          return (\r\n                            <Badge key={`${field}-${idx}`} variant=\"secondary\" style={{ color, fontWeight }}>{field}</Badge>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                    ) : (\r\n                    <p className=\"text-sm text-muted-foreground\">No fields extracted yet.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </ScrollArea>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2998, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nconst AlertDialog = AlertDialogPrimitive.Root\r\n\r\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\r\n\r\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\r\n\r\nconst AlertDialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\r\n\r\nconst AlertDialogContent = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n))\r\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\r\n\r\nconst AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\r\n\r\nconst AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\r\n\r\nconst AlertDialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\r\n\r\nconst AlertDialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogDescription.displayName =\r\n  AlertDialogPrimitive.Description.displayName\r\n\r\nconst AlertDialogAction = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action\r\n    ref={ref}\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\r\n\r\nconst AlertDialogCancel = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(\r\n      buttonVariants({ variant: \"outline\" }),\r\n      \"mt-2 sm:mt-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,2KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,2KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,2KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,2KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,2KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3125, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3317, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"]\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n})\r\nChartContainer.displayName = \"Chart\"\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nconst ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n    React.ComponentProps<\"div\"> & {\r\n      hideLabel?: boolean\r\n      hideIndicator?: boolean\r\n      indicator?: \"line\" | \"dot\" | \"dashed\"\r\n      nameKey?: string\r\n      labelKey?: string\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null\r\n      }\r\n\r\n      const [item] = payload\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, payload)}\r\n          </div>\r\n        )\r\n      }\r\n\r\n      if (!value) {\r\n        return null\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ])\r\n\r\n    if (!active || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n            const indicatorColor = color || item.payload.fill || item.color\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartTooltipContent.displayName = \"ChartTooltip\"\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nconst ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> &\r\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n      hideIcon?: boolean\r\n      nameKey?: string\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    if (!payload?.length) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartLegendContent.displayName = \"ChartLegend\"\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3613, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3666, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3707, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3787, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/icons/Logo.tsx"],"sourcesContent":["import Image from 'next/image';\r\n\r\nexport const Logo = () => (\r\n  <Image src=\"/GenesisLogo.png\" alt=\"Application Logo\" width={200} height={100} />\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,OAAO,kBAClB,8OAAC,6HAAA,CAAA,UAAK;QAAC,KAAI;QAAmB,KAAI;QAAmB,OAAO;QAAK,QAAQ","debugId":null}},
    {"offset": {"line": 3810, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3842, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3878, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/lib/mock-data.ts"],"sourcesContent":["import type { CsvProcessingEntry, ProcessingStatus } from '@/types/csv-status';\r\n\r\n// Timestamp helpers\r\nconst nowStatic = Date.now();\r\nconst sec = (s: number) => s * 1000;\r\nconst min = (m: number) => m * 60000;\r\n\r\nconst createStageStats = (status: ProcessingStatus, startOffset?: number, endOffset?: number, errorMessage?: string) => {\r\n  const stats: any = { status };\r\n  if (startOffset !== undefined) stats.start_time = new Date(nowStatic + startOffset).toISOString();\r\n  if (endOffset !== undefined) stats.end_time = new Date(nowStatic + endOffset).toISOString();\r\n  if (status === 'error' && errorMessage) stats.error_message = errorMessage;\r\n  return stats;\r\n};\r\n\r\n// Mock CSV processing entries with realistic data\r\nexport const mockCsvData: CsvProcessingEntry[] = [\r\n  {\r\n    id: \"1\",\r\n    filename: \"customer_data_2024.csv\",\r\n    status: \"ok\",\r\n    insertion_date: new Date(nowStatic - min(30)).toISOString(),\r\n    extracted_fields: [\"name\", \"email\", \"phone\", \"address\"],\r\n    rowCount: 15423,\r\n    fileSize: \"2.1 MB\",\r\n    original_row_count: 15500,\r\n    final_row_count: 15423,\r\n    valid_row_percentage: 99.5,\r\n    gemini_input_tokens: 1250,\r\n    gemini_output_tokens: 350,\r\n    gemini_total_tokens: 1600,\r\n    estimated_cost: 0.0045,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(30), -min(29)),\r\n      sampling: createStageStats('ok', -min(29), -min(28)),\r\n      gemini_query: createStageStats('ok', -min(28), -min(25)),\r\n      normalization: createStageStats('ok', -min(25), -min(20))\r\n    }\r\n  },\r\n  {\r\n    id: \"2\",\r\n    filename: \"sales_report_Q4.csv\",\r\n    status: \"running\",\r\n    insertion_date: new Date(nowStatic - min(15)).toISOString(),\r\n    extracted_fields: [\"product_id\", \"sales_amount\", \"date\"],\r\n    rowCount: 8756,\r\n    fileSize: \"1.8 MB\",\r\n    original_row_count: 8756,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(15), -min(14)),\r\n      sampling: createStageStats('ok', -min(14), -min(13)),\r\n      gemini_query: createStageStats('running', -min(13)),\r\n      normalization: createStageStats('enqueued')\r\n    }\r\n  },\r\n  {\r\n    id: \"3\",\r\n    filename: \"employee_records.csv\",\r\n    status: \"error\",\r\n    insertion_date: new Date(nowStatic - min(45)).toISOString(),\r\n    extracted_fields: [\"employee_id\", \"department\", \"salary\"],\r\n    rowCount: 2340,\r\n    fileSize: \"0.9 MB\",\r\n    original_row_count: 2340,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(45), -min(44)),\r\n      sampling: createStageStats('ok', -min(44), -min(43)),\r\n      gemini_query: createStageStats('error', -min(43), -min(42), 'gemini_query: API rate limit exceeded'),\r\n      normalization: createStageStats('enqueued')\r\n    }\r\n  },\r\n  {\r\n    id: \"4\",\r\n    filename: \"inventory_snapshot.csv\",\r\n    status: \"ok\",\r\n    insertion_date: new Date(nowStatic - min(60)).toISOString(),\r\n    extracted_fields: [\"item_code\", \"quantity\", \"location\", \"last_updated\"],\r\n    rowCount: 12987,\r\n    fileSize: \"3.2 MB\",\r\n    original_row_count: 13100,\r\n    final_row_count: 12987,\r\n    valid_row_percentage: 99.1,\r\n    gemini_input_tokens: 2100,\r\n    gemini_output_tokens: 450,\r\n    gemini_total_tokens: 2550,\r\n    estimated_cost: 0.0078,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(60), -min(59)),\r\n      sampling: createStageStats('ok', -min(59), -min(58)),\r\n      gemini_query: createStageStats('ok', -min(58), -min(55)),\r\n      normalization: createStageStats('ok', -min(55), -min(50))\r\n    }\r\n  },\r\n  {\r\n    id: \"5\",\r\n    filename: \"transaction_log.csv\",\r\n    status: \"enqueued\",\r\n    insertion_date: new Date(nowStatic - min(5)).toISOString(),\r\n    extracted_fields: [],\r\n    rowCount: 45678,\r\n    fileSize: \"8.7 MB\",\r\n    original_row_count: 45678,\r\n    stage_stats: {\r\n      classification: createStageStats('enqueued'),\r\n      sampling: createStageStats('enqueued'),\r\n      gemini_query: createStageStats('enqueued'),\r\n      normalization: createStageStats('enqueued')\r\n    }\r\n  },\r\n  {\r\n    id: \"6\",\r\n    filename: \"user_analytics.csv\",\r\n    status: \"error\",\r\n    insertion_date: new Date(nowStatic - min(90)).toISOString(),\r\n    extracted_fields: [\"user_id\", \"session_duration\"],\r\n    rowCount: 5432,\r\n    fileSize: \"1.1 MB\",\r\n    original_row_count: 5432,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(90), -min(89)),\r\n      sampling: createStageStats('error', -min(89), -min(88), 'sampling: Invalid file format detected'),\r\n      gemini_query: createStageStats('enqueued'),\r\n      normalization: createStageStats('enqueued')\r\n    }\r\n  },\r\n  {\r\n    id: \"7\",\r\n    filename: \"marketing_leads.csv\",\r\n    status: \"running\",\r\n    insertion_date: new Date(nowStatic - min(10)).toISOString(),\r\n    extracted_fields: [\"lead_id\", \"company\", \"contact_email\", \"interest_level\"],\r\n    rowCount: 3456,\r\n    fileSize: \"0.7 MB\",\r\n    original_row_count: 3456,\r\n    gemini_input_tokens: 890,\r\n    gemini_output_tokens: 240,\r\n    gemini_total_tokens: 1130,\r\n    estimated_cost: 0.0032,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(10), -min(9)),\r\n      sampling: createStageStats('ok', -min(9), -min(8)),\r\n      gemini_query: createStageStats('ok', -min(8), -min(5)),\r\n      normalization: createStageStats('running', -min(5))\r\n    }\r\n  },\r\n  {\r\n    id: \"8\",\r\n    filename: \"financial_summary.csv\",\r\n    status: \"ok\",\r\n    insertion_date: new Date(nowStatic - min(120)).toISOString(),\r\n    extracted_fields: [\"account_id\", \"balance\", \"currency\", \"last_transaction\"],\r\n    rowCount: 7890,\r\n    fileSize: \"1.5 MB\",\r\n    original_row_count: 7920,\r\n    final_row_count: 7890,\r\n    valid_row_percentage: 99.6,\r\n    gemini_input_tokens: 1780,\r\n    gemini_output_tokens: 420,\r\n    gemini_total_tokens: 2200,\r\n    estimated_cost: 0.0067,\r\n    ai_model: \"Gemini 2.5 Flash\",\r\n    stage_stats: {\r\n      classification: createStageStats('ok', -min(120), -min(119)),\r\n      sampling: createStageStats('ok', -min(119), -min(118)),\r\n      gemini_query: createStageStats('ok', -min(118), -min(115)),\r\n      normalization: createStageStats('ok', -min(115), -min(110))\r\n    }\r\n  }\r\n];\r\n\r\n// Simulate dynamic updates for running processes\r\nexport const generateMockUpdate = (): CsvProcessingEntry[] => {\r\n  return mockCsvData.map(entry => {\r\n    if (entry.status === 'running') {\r\n      // Simulate progress in running entries\r\n      const random = Math.random();\r\n      if (random < 0.1) {\r\n        // 10% chance to complete\r\n        return {\r\n          ...entry,\r\n          status: 'ok',\r\n          stage_stats: {\r\n            ...entry.stage_stats,\r\n            normalization: createStageStats('ok', -min(5), 0)\r\n          }\r\n        };\r\n      } else if (random < 0.05) {\r\n        // 5% chance to error\r\n        return {\r\n          ...entry,\r\n          status: 'error',\r\n          stage_stats: {\r\n            ...entry.stage_stats,\r\n            normalization: createStageStats('error', -min(5), 0, 'normalization: Data validation failed')\r\n          }\r\n        };\r\n      }\r\n    }\r\n    return entry;\r\n  });\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/lib/data-provider.ts"],"sourcesContent":["import config from './config';\r\nimport { apiClient } from './api-client';\r\nimport { mockCsvData, generateMockUpdate } from './mock-data';\r\nimport { CsvProcessingEntry } from '@/types/csv-status';\r\n\r\nexport class DataProvider {\r\n  private mode: 'mock' | 'real';\r\n  private mockUpdateInterval: NodeJS.Timeout | null = null;\r\n  private fallbackInterval: NodeJS.Timeout | null = null;\r\n  private listeners: Set<(data: CsvProcessingEntry[]) => void> = new Set();\r\n  private currentData: CsvProcessingEntry[] = [];\r\n  private ws: WebSocket | null = null;\r\n\r\n  constructor() {\r\n    // Check localStorage for saved mode preference, default to 'mock'\r\n    // Only access localStorage if we're in the browser\r\n    let savedMode: 'mock' | 'real' | null = null;\r\n    if (typeof window !== 'undefined') {\r\n      savedMode = localStorage.getItem('dataSourceMode') as 'mock' | 'real' | null;\r\n    }\r\n    this.mode = savedMode || 'mock';\r\n    console.log(`DataProvider initialized in ${this.mode} mode`);\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    if (this.mode === 'mock') {\r\n      this.initMockMode();\r\n    } else {\r\n      this.initRealMode();\r\n    }\r\n  }\r\n\r\n  private initMockMode() {\r\n    // Start with initial mock data\r\n    this.currentData = [...mockCsvData];\r\n    this.notifyListeners();\r\n\r\n    // Update mock data periodically with small changes\r\n    this.mockUpdateInterval = setInterval(() => {\r\n      this.currentData = generateMockUpdate();\r\n      this.notifyListeners();\r\n    }, config.pollingInterval);\r\n  }\r\n\r\n  private initRealMode() {\r\n    // Initial fetch\r\n    this.fetchRealData();\r\n\r\n    // Set up WebSocket connection for real-time updates\r\n    this.connectWebSocket();\r\n  }\r\n\r\n  private connectWebSocket() {\r\n    try {\r\n      // Clear any existing fallback interval before creating new WebSocket\r\n      if (this.fallbackInterval) {\r\n        clearInterval(this.fallbackInterval);\r\n        this.fallbackInterval = null;\r\n      }\r\n\r\n      this.ws = new WebSocket(config.wsBaseUrl + '/ws/pipeline');\r\n      \r\n      this.ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          this.currentData = data;\r\n          this.notifyListeners();\r\n        } catch (error) {\r\n          console.error('Failed to parse WebSocket message:', error);\r\n          this.notifyErrorListeners(error);\r\n        }\r\n      };\r\n      \r\n      this.ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        this.notifyErrorListeners(error);\r\n        // Start fallback polling if not already running\r\n        if (!this.fallbackInterval) {\r\n          console.log('Starting fallback polling due to WebSocket error');\r\n          this.fallbackInterval = setInterval(() => this.fetchRealData(), config.pollingInterval);\r\n        }\r\n      };\r\n      \r\n      this.ws.onclose = (event) => {\r\n        console.warn('WebSocket closed:', event.code, event.reason);\r\n        this.notifyErrorListeners(new Error('WebSocket closed'));\r\n        \r\n        // Start fallback polling if not already running\r\n        if (!this.fallbackInterval) {\r\n          console.log('Starting fallback polling due to WebSocket close');\r\n          this.fallbackInterval = setInterval(() => this.fetchRealData(), config.pollingInterval);\r\n        }\r\n        \r\n        // Try to reconnect after a delay, but only if we're still in real mode\r\n        setTimeout(() => {\r\n          if (this.mode === 'real' && (!this.ws || this.ws.readyState === WebSocket.CLOSED)) {\r\n            console.log('Attempting to reconnect WebSocket...');\r\n            this.connectWebSocket();\r\n          }\r\n        }, 5000);\r\n      };\r\n      \r\n      this.ws.onopen = () => {\r\n        console.log('WebSocket connected successfully');\r\n        // Clear fallback polling when WebSocket is connected\r\n        if (this.fallbackInterval) {\r\n          console.log('Clearing fallback polling - WebSocket connected');\r\n          clearInterval(this.fallbackInterval);\r\n          this.fallbackInterval = null;\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to create WebSocket connection:', error);\r\n      this.notifyErrorListeners(error);\r\n      // Start fallback polling if not already running\r\n      if (!this.fallbackInterval) {\r\n        console.log('Starting fallback polling due to WebSocket creation error');\r\n        this.fallbackInterval = setInterval(() => this.fetchRealData(), config.pollingInterval);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async fetchRealData() {\r\n    try {\r\n      const data = await apiClient.getPipelineStatus();\r\n      this.currentData = data;\r\n      this.notifyListeners();\r\n    } catch (error) {\r\n      this.notifyErrorListeners(error);\r\n      console.error('Failed to fetch pipeline status:', error);\r\n    }\r\n  }\r\n\r\n  private notifyListeners() {\r\n    this.listeners.forEach(listener => listener(this.currentData));\r\n  }\r\n\r\n  private errorListeners: Set<(err: any) => void> = new Set();\r\n\r\n  private notifyErrorListeners(err: any) {\r\n    this.errorListeners.forEach(listener => listener(err));\r\n  }\r\n\r\n  subscribe(listener: (data: CsvProcessingEntry[]) => void, onError?: (err: any) => void) {\r\n    this.listeners.add(listener);\r\n    if (onError) this.errorListeners.add(onError);\r\n    // Immediately notify with current data\r\n    listener(this.currentData);\r\n    // Return unsubscribe function\r\n    return () => {\r\n      this.listeners.delete(listener);\r\n      if (onError) this.errorListeners.delete(onError);\r\n    };\r\n  }\r\n\r\n  async getStats() {\r\n    if (this.mode === 'mock') {\r\n      const total = this.currentData.length;\r\n      return {\r\n        total,\r\n        processing: this.currentData.filter(item => item.status === 'running').length,\r\n        completed: this.currentData.filter(item => item.status === 'ok').length,\r\n        failed: this.currentData.filter(item => item.status === 'error').length,\r\n      };\r\n    }\r\n\r\n    try {\r\n      return await apiClient.getStats();\r\n    } catch (err) {\r\n      // Suppress error and return null or a default object\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async forceRefresh() {\r\n    if (this.mode === 'mock') {\r\n      this.currentData = generateMockUpdate();\r\n      this.notifyListeners();\r\n    } else {\r\n      await this.fetchRealData();\r\n    }\r\n  }\r\n\r\n  // New method to switch between mock and real modes\r\n  switchMode(newMode: 'mock' | 'real') {\r\n    if (this.mode === newMode) return; // No change needed\r\n    \r\n    // Save preference to localStorage only if we're in the browser\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.setItem('dataSourceMode', newMode);\r\n    }\r\n    \r\n    // Cleanup current mode resources (but keep listeners)\r\n    this.cleanupResources();\r\n    \r\n    // Switch to new mode\r\n    this.mode = newMode;\r\n    console.log(`DataProvider switched to ${this.mode} mode`);\r\n    \r\n    // Reinitialize with new mode\r\n    this.init();\r\n  }\r\n\r\n  // Get current mode\r\n  getCurrentMode(): 'mock' | 'real' {\r\n    return this.mode;\r\n  }\r\n\r\n  // Clean up resources only (intervals and websocket)\r\n  private cleanupResources() {\r\n    if (this.mockUpdateInterval) {\r\n      clearInterval(this.mockUpdateInterval);\r\n      this.mockUpdateInterval = null;\r\n    }\r\n    if (this.fallbackInterval) {\r\n      clearInterval(this.fallbackInterval);\r\n      this.fallbackInterval = null;\r\n    }\r\n    if (this.ws) {\r\n      if (this.ws.readyState === WebSocket.OPEN) {\r\n        this.ws.close(1000, 'DataProvider mode switch');\r\n      }\r\n      this.ws = null;\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    this.cleanupResources();\r\n    // Clear all listeners only on full cleanup\r\n    this.listeners.clear();\r\n    this.errorListeners.clear();\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const dataProvider = new DataProvider(); "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4339, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CarlosGarcia/Genesis/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\r\nimport type { CsvProcessingEntry, ProcessingStatus, ProcessingStep, NormalizerChecks } from \"@/types/csv-status\";\r\nimport { analyzeLogs, type LogAnalysisOutput } from \"@/ai/flows/log-analyzer-flow\";\r\nimport { CsvStatusTable } from \"@/components/csv-monitor/CsvStatusTable\";\r\nimport { StatCard } from \"@/components/csv-monitor/StatCard\";\r\nimport { FileUpload } from \"@/components/csv-monitor/FileUpload\";\r\nimport { FileDetailDialog } from \"@/components/csv-monitor/FileDetailDialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { RefreshCw, Search, Loader2, Activity, CheckCircle2, Loader, Files, X, Download, Calendar as CalendarIcon, FileQuestion, Wand2, Settings, AlertTriangle, Info, Key, Eye, EyeOff, Copy, Pencil, ChevronDown, Check, Plus, ArrowUp, Database, Cloud, Settings2 } from \"lucide-react\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { AlertDialog, AlertDialogAction, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { formatDuration, cn } from \"@/lib/utils\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer, Legend as RechartsLegend, PieChart, Pie, Cell } from \"recharts\";\r\nimport { ChartContainer, ChartTooltipContent, type ChartConfig } from \"@/components/ui/chart\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { format as formatDate, differenceInDays, subDays, addMinutes, setHours, setMinutes } from \"date-fns\";\r\nimport type { DateRange } from \"react-day-picker\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Calendar } from \"@/components/ui/calendar\";\r\nimport { Logo } from \"@/components/icons/Logo\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { apiClient } from \"@/lib/api-client\";\r\nimport { dataProvider } from \"@/lib/data-provider\";\r\nimport config from \"@/lib/config\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\n\r\n// Mock logs for analysis\r\nconst mockLogs = `\r\n2025-06-23 12:18:05,257 - src.pipeline.watcher - INFO - New CSV detected: sample3_copy.csv\r\n2025-06-23 12:18:05,263 - src.pipeline.orchestrator - INFO - Pipeline stage classification: running\r\n2025-06-23 12:18:05,265 - src.pipeline.classifier - WARNING - Row 4 has 2 columns, expected 3\r\n2025-06-23 12:18:05,266 - src.pipeline.orchestrator - INFO - Pipeline stage classification: ok\r\n2025-06-23 12:18:05,268 - src.pipeline.orchestrator - INFO - Pipeline stage sampling: running\r\n2025-06-23 12:18:05,269 - src.pipeline.sampler - INFO - Extracted 4 uniformly sampled rows from sample3_copy.csv\r\n2025-06-23 12:18:05,269 - src.pipeline.orchestrator - INFO - Pipeline stage sampling: ok\r\n2025-06-23 12:18:05,271 - src.pipeline.orchestrator - INFO - Pipeline stage gemini_query: running\r\n2025-06-23 12:18:05,273 - src.pipeline.gemini_query - INFO - Querying Gemini API for header mapping...\r\n2025-06-23 12:18:07,032 - src.pipeline.gemini_query - INFO - Successfully received and parsed mapping from Gemini. 3 columns matched.\r\n2025-06-23 12:18:07,033 - src.pipeline.orchestrator - INFO - Pipeline stage gemini_query: ok\r\n2025-06-23 12:18:07,040 - src.pipeline.orchestrator - INFO - Pipeline stage verification: running\r\n2025-06-23 12:18:07,043 - src.pipeline.normalizer - ERROR - Verification failed: Row 4 has 2 columns, expected 3\r\n2025-06-23 12:18:07,043 - src.pipeline.orchestrator - ERROR - Pipeline failed for sample3_copy.csv: Verification failed\r\n2025-06-23 12:18:07,047 - src.pipeline.orchestrator - INFO - Pipeline stage verification: error\r\n`.trim();\r\n\r\nexport default function CsvMonitorPage() {\r\n  const [csvData, setCsvData] = useState<CsvProcessingEntry[]>([]);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n  const [sortConfig, setSortConfig] = useState<{ key: keyof CsvProcessingEntry | null; direction: 'ascending' | 'descending' }>({ key: 'insertion_date', direction: 'descending' });\r\n  const [currentTime, setCurrentTime] = useState<number | undefined>(undefined);\r\n  // Default: last 2 hours\r\n  const defaultTo = new Date();\r\n  defaultTo.setMinutes(defaultTo.getUTCMinutes());\r\n  defaultTo.setHours(defaultTo.getUTCHours());\r\n  const defaultFrom = new Date(defaultTo.getTime() - 2 * 60 * 60 * 1000);\r\n  defaultFrom.setMinutes(defaultFrom.getUTCMinutes());\r\n  defaultFrom.setHours(defaultFrom.getUTCHours());\r\n  const [date, setDate] = React.useState<DateRange | undefined>({\r\n    from: defaultFrom,\r\n    to: defaultTo,\r\n  });\r\n  const [timeFrom, setTimeFrom] = useState<string>(defaultFrom.toTimeString().slice(0,5));\r\n  const [timeTo, setTimeTo] = useState<string>(defaultTo.toTimeString().slice(0,5));\r\n  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n  const [selectedFileId, setSelectedFileId] = useState<string | null>(null);\r\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\r\n  const [isAnalyzingLogs, setIsAnalyzingLogs] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState<LogAnalysisOutput | null>(null);\r\n  const [isAnalysisModalOpen, setIsAnalysisModalOpen] = useState(false);\r\n\r\n  // Settings State\r\n  const [showSuccessToast, setShowSuccessToast] = useState(true);\r\n  const [selectedModel, setSelectedModel] = useState(\"gemini-2.0-flash\");\r\n\r\n  // Add state for active tab\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n\r\n  // Add ref for Processing Status table\r\n  const processingStatusRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [modelInfoDialog, setModelInfoDialog] = useState<{ open: boolean, model: string | null }>({ open: false, model: null });\r\n  const [keyDialog, setKeyDialog] = useState<{ open: boolean, model: string | null }>({ open: false, model: null });\r\n  \r\n  // Mock mode toggle state - initialize with default value, update from dataProvider in useEffect\r\n  const [isMockMode, setIsMockMode] = useState(true);\r\n  \r\n  const [showFullKey, setShowFullKey] = useState<{ [model: string]: boolean }>({});\r\n  const [modelKeys, setModelKeys] = useState<{ [model: string]: string }>({\r\n    'Gemini 2.5 Pro': 'AIzaSyA1234567890XyZ',\r\n    'Gemini 2.5 Flash': 'AIzaSyB1234567890AbC',\r\n    'Gemini 2.0 Flash': 'AIzaSyC1234567890Def',\r\n    'o3': 'o3sk-1234567890xyz',\r\n    'GPT-4.1 mini': 'sk-1234567890abcd',\r\n    'Claude 3.7 Sonnet': 'claude-1234567890efg',\r\n  });\r\n  const [editKey, setEditKey] = useState<string>('');\r\n\r\n  const [selectedFields, setSelectedFields] = useState<string[]>([\r\n    'Email', 'Password', 'SSN', 'NID', 'Credit Card', 'Bank Account'\r\n  ]);\r\n  const [notifyLogic, setNotifyLogic] = useState<'AND' | 'OR'>('OR');\r\n  const [multiSelectOpen, setMultiSelectOpen] = useState(false);\r\n\r\n  const aiModels = [\r\n    {\r\n      name: 'Gemini 2.5 Pro',\r\n      pricing: '$7 per 1M input tokens, $21 per 1M output tokens',\r\n      release: '2024-06',\r\n      url: 'https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/gemini',\r\n      details: 'Best for high-accuracy, complex tasks. Supports long context.'\r\n    },\r\n    {\r\n      name: 'Gemini 2.5 Flash',\r\n      pricing: '$0.35 per 1M input tokens, $1.05 per 1M output tokens',\r\n      release: '2024-06',\r\n      url: 'https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/gemini',\r\n      details: 'Optimized for speed and cost, good for chat and summarization.'\r\n    },\r\n    {\r\n      name: 'Gemini 2.0 Flash',\r\n      pricing: '$0.35 per 1M input tokens, $1.05 per 1M output tokens',\r\n      release: '2024-03',\r\n      url: 'https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/gemini',\r\n      details: 'Previous fast Gemini model.'\r\n    },\r\n    {\r\n      name: 'o3',\r\n      pricing: 'TBD',\r\n      release: '2024-06',\r\n      url: 'https://openrouter.ai/models/open-orca-3',\r\n      details: 'Open source, high-context, multi-modal.'\r\n    },\r\n    {\r\n      name: 'GPT-4.1 mini',\r\n      pricing: '$5 per 1M input tokens, $15 per 1M output tokens',\r\n      release: '2024-05',\r\n      url: 'https://platform.openai.com/docs/models/gpt-4',\r\n      details: 'OpenAI, smaller context, fast.'\r\n    },\r\n    {\r\n      name: 'Claude 3.7 Sonnet',\r\n      pricing: '$3 per 1M input tokens, $15 per 1M output tokens',\r\n      release: '2024-06',\r\n      url: 'https://www.anthropic.com/news/claude-3-7',\r\n      details: 'Anthropic, strong at reasoning, long context.'\r\n    },\r\n  ];\r\n\r\n  const [activeModel, setActiveModel] = useState<string>('Gemini 2.5 Flash');\r\n\r\n  const [uploadPriority, setUploadPriority] = useState<'Normal' | 'High'>('Normal');\r\n  const [uploadSelectedModel, setUploadSelectedModel] = useState<string>('Gemini 2.5 Flash');\r\n  const [aiPopoverOpen, setAiPopoverOpen] = useState(false);\r\n  const availableModels = aiModels.map(m => m.name);\r\n\r\n  // SENSITIVE_FIELDS declaration moved here to fix linter error\r\n  const SENSITIVE_FIELDS: string[] = [\r\n    'Email', 'Password', 'SSN', 'NID', 'Address', 'Credit Card', 'Phone', 'Bank Account', 'DOB', 'Passport', 'Driver License'\r\n  ];\r\n\r\n  function censorKey(key: string) {\r\n    if (key.length <= 8) return '*'.repeat(key.length);\r\n    return key.slice(0, 4) + '*'.repeat(key.length - 8) + key.slice(-4);\r\n  }\r\n\r\n  function handleCopyKey(model: string) {\r\n    navigator.clipboard.writeText(modelKeys[model]);\r\n    toast({ title: 'Key copied to clipboard.' });\r\n  }\r\n\r\n  function handleEditKey(model: string) {\r\n    setEditKey(modelKeys[model]);\r\n  }\r\n\r\n  function handleSaveKey(model: string) {\r\n    setModelKeys(prev => ({ ...prev, [model]: editKey }));\r\n    setKeyDialog({ open: false, model: null });\r\n    toast({ title: 'Key updated.' });\r\n  }\r\n\r\n  const getOverallStatus = useCallback((entry: CsvProcessingEntry): ProcessingStatus => {\r\n    const stageKeys = ['classification', 'sampling', 'gemini_query', 'normalization'];\r\n    const allStats = stageKeys.map(key => entry.stage_stats?.[key]);\r\n    if (entry.status === 'error' || allStats.some(stat => stat && stat.status === 'error')) {\r\n      return 'error';\r\n    }\r\n    if (entry.status === 'running' || allStats.some(stat => stat && stat.status === 'running')) {\r\n      return 'running';\r\n    }\r\n    if (entry.status === 'ok') {\r\n      return 'ok';\r\n    }\r\n    return 'enqueued';\r\n  }, []);\r\n\r\n  const fetchPipelineData = useCallback(async (isSilent = false) => {\r\n    if (!isSilent) setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const data = await apiClient.getPipelineStatus();\r\n      setCsvData(data);\r\n      \r\n      if (!isSilent && showSuccessToast) {\r\n        toast({\r\n          title: \"Data Refreshed\",\r\n          description: \"Processing statuses have been updated.\",\r\n          variant: \"default\", \r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch pipeline data';\r\n      setError(errorMessage);\r\n      \r\n      if (!isSilent) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: errorMessage,\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    } finally {\r\n      if (!isSilent) setIsLoading(false);\r\n      setIsInitialLoading(false);\r\n    }\r\n  }, [toast, showSuccessToast]);\r\n\r\n  const handleRefresh = useCallback(async (isSilent = false) => {\r\n    if (!isSilent) setIsLoading(true);\r\n    try {\r\n      await dataProvider.forceRefresh();\r\n      if (!isSilent && showSuccessToast) {\r\n        toast({\r\n          title: \"Data Refreshed\",\r\n          description: \"Processing statuses have been updated.\",\r\n          variant: \"default\", \r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to refresh data';\r\n      setError(errorMessage);\r\n      if (!isSilent) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: errorMessage,\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    } finally {\r\n      if (!isSilent) setIsLoading(false);\r\n    }\r\n  }, [toast, showSuccessToast]);\r\n  \r\n  useEffect(() => {\r\n    const unsubscribe = dataProvider.subscribe(\r\n      (data: CsvProcessingEntry[]) => {\r\n        if (Array.isArray(data)) {\r\n          setCsvData(data);\r\n          setIsInitialLoading(false);\r\n          setError(null); // clear error if we get data\r\n        }\r\n      },\r\n      (err: any) => {\r\n        setError('Backend unreachable');\r\n        setIsInitialLoading(false);\r\n      }\r\n    );\r\n    \r\n    // Sync toggle state with dataProvider mode on client\r\n    setIsMockMode(dataProvider.getCurrentMode() === 'mock');\r\n    \r\n    setCurrentTime(Date.now());\r\n    const timerId = setInterval(() => setCurrentTime(Date.now()), 1000);\r\n    return () => {\r\n      clearInterval(timerId);\r\n      unsubscribe();\r\n      // Don't call dataProvider.cleanup() here since it's a singleton\r\n    };\r\n  }, []);\r\n\r\n  const handleDownload = useCallback(async (filename: string) => {\r\n    // Find the entry by filename\r\n    const entry = csvData.find(e => e.filename === filename);\r\n    if (!entry) {\r\n      toast({\r\n        title: \"Download Error\",\r\n        description: \"File not found\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const blob = await apiClient.downloadProcessedFile(entry.id);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `normalized_${entry.filename}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n      \r\n      if (showSuccessToast) {\r\n        toast({\r\n          title: \"Download Started\",\r\n          description: `Downloading ${entry.filename}...`,\r\n          variant: \"default\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Download failed';\r\n      toast({\r\n        title: \"Download Error\",\r\n        description: errorMessage,\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  }, [csvData, toast, showSuccessToast]);\r\n\r\n  const handleRetry = useCallback(async (id: string) => {\r\n    const entryToRetry = csvData.find(entry => entry.id === id);\r\n    if (!entryToRetry) return;\r\n    // Only allow retry for gemini_query stage errors\r\n    if (entryToRetry.stage_stats?.gemini_query?.status === 'error' && entryToRetry.status === 'error') {\r\n      try {\r\n        toast({\r\n          title: \"Retrying Gemini Query...\",\r\n          description: `Retrying Gemini Query for ${entryToRetry.filename}`,\r\n          variant: \"default\",\r\n        });\r\n        await apiClient.retryGeminiQuery(entryToRetry.id);\r\n        toast({\r\n          title: \"Retry Successful\",\r\n          description: `Gemini Query and subsequent stages retried for ${entryToRetry.filename}`,\r\n          variant: \"default\",\r\n        });\r\n        await handleRefresh(true);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Retry failed';\r\n        toast({\r\n          title: \"Retry Failed\",\r\n          description: errorMessage,\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Retry Not Available\",\r\n        description: \"Retry is only available for files that failed at the Gemini Query stage.\",\r\n        variant: \"default\",\r\n      });\r\n    }\r\n  }, [csvData, toast, fetchPipelineData]);\r\n\r\n  const handleFileUpload = useCallback(async (files: File[], model: string = '', priority: boolean = false) => {\r\n    try {\r\n      for (const file of files) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        if (model) formData.append('model', model);\r\n        if (priority) formData.append('priority', 'true');\r\n        const response = await fetch(`${config.apiBaseUrl}/api/upload`, {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to upload ${file.name}`);\r\n        }\r\n      }\r\n      toast({\r\n        title: \"Upload Successful\",\r\n        description: `${files.length} file(s) uploaded and queued for processing.`,\r\n        variant: \"default\",\r\n      });\r\n      fetchPipelineData();\r\n      setActiveTab('dashboard');\r\n      setSortConfig({ key: 'insertion_date', direction: 'descending' });\r\n      setTimeout(() => {\r\n        if (processingStatusRef.current) {\r\n          processingStatusRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n      }, 100);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'File upload failed';\r\n      toast({\r\n        title: \"Upload Error\",\r\n        description: errorMessage,\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  }, [toast, fetchPipelineData]);\r\n\r\n  const handleDownloadRange = useCallback(() => {\r\n    if (!date?.from || !date.to) {\r\n        toast({\r\n            title: \"Please select a date range\",\r\n            description: \"You must select a start and end date to download files.\",\r\n            variant: \"destructive\",\r\n        });\r\n        return;\r\n    }\r\n\r\n    toast({\r\n      title: \"Bulk Download\",\r\n      description: \"Bulk download functionality will be implemented in a future update.\",\r\n      variant: \"default\",\r\n    });\r\n  }, [date, toast]);\r\n\r\n  const handleShowFileDetails = useCallback((entry: CsvProcessingEntry) => {\r\n    setSelectedFileId(entry.id);\r\n    setIsDetailModalOpen(true);\r\n  }, []);\r\n  \r\n  const handleAnalyzeLogs = useCallback(async () => {\r\n    setIsAnalyzingLogs(true);\r\n    try {\r\n        const result = await analyzeLogs({ logs: mockLogs });\r\n        setAnalysisResult(result);\r\n        setIsAnalysisModalOpen(true);\r\n    } catch(e) {\r\n        console.error(e);\r\n        toast({\r\n            title: \"Analysis Failed\",\r\n            description: \"Could not analyze logs. Please try again.\",\r\n            variant: \"destructive\"\r\n        });\r\n    } finally {\r\n        setIsAnalyzingLogs(false);\r\n    }\r\n  }, [toast]);\r\n\r\n\r\n  const handleClearFilters = useCallback(() => {\r\n    setFilterText(\"\");\r\n    setStatusFilter(\"all\");\r\n  }, []);\r\n\r\n  const filteredData = useMemo(() => {\r\n    let sortableItems = [...csvData];\r\n    \r\n    if (statusFilter !== 'all') {\r\n      sortableItems = sortableItems.filter(entry => getOverallStatus(entry) === statusFilter);\r\n    }\r\n    \r\n    if (filterText) {\r\n      sortableItems = sortableItems.filter((entry) =>\r\n        entry.filename.toLowerCase().includes(filterText.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (sortConfig.key !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        const valA = a[sortConfig.key!];\r\n        const valB = b[sortConfig.key!];\r\n        \r\n        let comparison = 0;\r\n        if (sortConfig.key === 'insertion_date') {\r\n          // Handle insertion_date sorting\r\n          const dateA = valA ? new Date(valA as string).getTime() : 0;\r\n          const dateB = valB ? new Date(valB as string).getTime() : 0;\r\n          comparison = dateA - dateB;\r\n        } else {\r\n          comparison = String(valA).localeCompare(String(valB));\r\n        }\r\n        \r\n        return sortConfig.direction === 'ascending' ? comparison : -comparison;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [csvData, filterText, sortConfig, statusFilter, getOverallStatus]);\r\n\r\n  const requestSort = (key: keyof CsvProcessingEntry) => {\r\n    let direction: 'ascending' | 'descending' = 'ascending';\r\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const todayStats = useMemo(() => {\r\n    if (!currentTime) {\r\n      return { processedToday: 0, successRateToday: \"N/A\", inProgress: 0 };\r\n    }\r\n\r\n    const now = new Date(currentTime);\r\n    const startOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate()).getTime();\r\n    const endOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59, 999).getTime();\r\n\r\n    let processedTodayCount = 0;\r\n    let successfulTodayCount = 0;\r\n    let inProgressCount = 0;\r\n\r\n    csvData.forEach(entry => {\r\n      const isRunning = getOverallStatus(entry) === 'running';\r\n      if (isRunning) {\r\n        inProgressCount++;\r\n      }\r\n      let finalStepTime: number | undefined = undefined;\r\n      const isFullyCompleted = getOverallStatus(entry) === 'ok';\r\n      if (isFullyCompleted) {\r\n        finalStepTime = entry.stage_stats?.normalization?.end_time ? new Date(entry.stage_stats.normalization.end_time).getTime() : undefined;\r\n      } else {\r\n        // Find the last error or halt time among the stages\r\n        const stages = ['classification', 'sampling', 'gemini_query', 'normalization'];\r\n        for (const stage of stages) {\r\n          const stat = entry.stage_stats?.[stage];\r\n          if (stat?.status === 'error' && stat.end_time) {\r\n            finalStepTime = new Date(stat.end_time).getTime();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (finalStepTime && finalStepTime >= startOfToday && finalStepTime <= endOfToday) {\r\n        processedTodayCount++;\r\n        if (isFullyCompleted) {\r\n          successfulTodayCount++;\r\n        }\r\n      }\r\n    });\r\n    const successRate = processedTodayCount > 0 ? ((successfulTodayCount / processedTodayCount) * 100).toFixed(0) + \"%\" : \"N/A\";\r\n    return {\r\n      processedToday: processedTodayCount,\r\n      successRateToday: successRate,\r\n      inProgress: inProgressCount,\r\n    };\r\n  }, [csvData, currentTime, getOverallStatus]);\r\n\r\n  const throughputChartData = useMemo(() => {\r\n    if (!currentTime || !date?.from) return [];\r\n    const getFinalProcessingInfo = (entry: CsvProcessingEntry): { time: number | undefined; isSuccess: boolean } => {\r\n      const isFullySuccessful = getOverallStatus(entry) === 'ok';\r\n      let finalTime: number | undefined = undefined;\r\n      if (isFullySuccessful) {\r\n        finalTime = entry.stage_stats?.normalization?.end_time ? new Date(entry.stage_stats.normalization.end_time).getTime() : undefined;\r\n      } else {\r\n        // Find the last error or halt time among the stages\r\n        const stages = ['classification', 'sampling', 'gemini_query', 'normalization'];\r\n        for (const stage of stages) {\r\n          const stat = entry.stage_stats?.[stage];\r\n          if (stat?.status === 'error' && stat.end_time) {\r\n            finalTime = new Date(stat.end_time).getTime();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return { time: finalTime, isSuccess: isFullySuccessful };\r\n    };\r\n\r\n    const data = [];\r\n    const startDate = new Date(date.from);\r\n    startDate.setHours(0, 0, 0, 0);\r\n    const endDate = date.to ? new Date(date.to) : new Date(startDate);\r\n    endDate.setHours(23, 59, 59, 999);\r\n\r\n    const numDays = differenceInDays(endDate, startDate) + 1;\r\n\r\n    if (numDays >= 7) { // Daily aggregation\r\n        for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n            const startOfDay = new Date(d);\r\n            startOfDay.setHours(0, 0, 0, 0);\r\n            const endOfDay = new Date(d);\r\n            endOfDay.setHours(23, 59, 59, 999);\r\n\r\n            const dayString = formatDate(d, 'MMM d');\r\n            \r\n            let totalProcessed = 0;\r\n            let successfullyProcessed = 0;\r\n\r\n            csvData.forEach(entry => {\r\n                const { time, isSuccess } = getFinalProcessingInfo(entry);\r\n                if (time && time >= startOfDay.getTime() && time <= endOfDay.getTime()) {\r\n                    totalProcessed++;\r\n                    if (isSuccess) {\r\n                        successfullyProcessed++;\r\n                    }\r\n                }\r\n            });\r\n            data.push({ day: dayString, processed: totalProcessed, successfully: successfullyProcessed });\r\n        }\r\n    } else if (numDays > 1) { // 4-hour chunks for 2-6 days\r\n        let currentChunkStart = new Date(startDate);\r\n        while(currentChunkStart <= endDate) {\r\n            const currentChunkEnd = new Date(currentChunkStart);\r\n            currentChunkEnd.setHours(currentChunkEnd.getHours() + 4);\r\n\r\n            const chunkLabel = formatDate(currentChunkStart, 'MMM d, HH:mm');\r\n            \r\n            let totalProcessed = 0;\r\n            let successfullyProcessed = 0;\r\n\r\n            csvData.forEach(entry => {\r\n                const { time, isSuccess } = getFinalProcessingInfo(entry);\r\n                if (time && time >= currentChunkStart.getTime() && time < currentChunkEnd.getTime()) {\r\n                    totalProcessed++;\r\n                    if (isSuccess) {\r\n                        successfullyProcessed++;\r\n                    }\r\n                }\r\n            });\r\n            data.push({ day: chunkLabel, processed: totalProcessed, successfully: successfullyProcessed });\r\n            currentChunkStart = currentChunkEnd;\r\n        }\r\n    } else { // 1 day, grouped by 2-hour chunks\r\n        let currentChunkStart = new Date(startDate);\r\n        while(currentChunkStart < endDate) {\r\n            const currentChunkEnd = new Date(currentChunkStart);\r\n            currentChunkEnd.setHours(currentChunkEnd.getHours() + 2);\r\n\r\n            const startHour = formatDate(currentChunkStart, 'HH:mm');\r\n            const endHour = formatDate(currentChunkEnd, 'HH:mm');\r\n            const chunkLabel = `${startHour}-${endHour}`;\r\n            \r\n            let totalProcessed = 0;\r\n            let successfullyProcessed = 0;\r\n\r\n            csvData.forEach(entry => {\r\n                const { time, isSuccess } = getFinalProcessingInfo(entry);\r\n                if (time && time >= currentChunkStart.getTime() && time < currentChunkEnd.getTime()) {\r\n                    totalProcessed++;\r\n                    if (isSuccess) {\r\n                        successfullyProcessed++;\r\n                    }\r\n                }\r\n            });\r\n            data.push({ day: chunkLabel, processed: totalProcessed, successfully: successfullyProcessed });\r\n            currentChunkStart = currentChunkEnd;\r\n        }\r\n    }\r\n    return data;\r\n  }, [csvData, currentTime, date, getOverallStatus]);\r\n\r\n  const errorAnalysisData = useMemo(() => {\r\n    // Group errors by stage and reason\r\n    const errorCounts: Record<string, number> = {};\r\n    csvData.forEach(entry => {\r\n      const stages = ['classification', 'sampling', 'gemini_query', 'normalization'];\r\n      for (const stage of stages) {\r\n        const stat = entry.stage_stats?.[stage];\r\n        if (stat?.status === 'error' && stat.error_message) {\r\n          // Parse error_message as '<stage>: <reason>'\r\n          let stageName = stage;\r\n          let reason = stat.error_message;\r\n          const match = /^([a-zA-Z_]+):\\s*(.*)$/.exec(stat.error_message);\r\n          if (match) {\r\n            stageName = match[1];\r\n            reason = match[2];\r\n          }\r\n          const label = `${stageName.charAt(0).toUpperCase() + stageName.slice(1)}: ${reason}`;\r\n          errorCounts[label] = (errorCounts[label] || 0) + 1;\r\n        }\r\n      }\r\n    });\r\n    const chartData = Object.entries(errorCounts)\r\n      .map(([label, value]) => ({\r\n        name: label,\r\n        key: label,\r\n        value: value,\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n    return chartData;\r\n  }, [csvData]);\r\n\r\n  // Palette for error chart sectors\r\n  const errorPalette = [\r\n    \"hsl(var(--chart-1))\",\r\n    \"hsl(var(--chart-2))\",\r\n    \"hsl(var(--chart-3))\",\r\n    \"hsl(var(--chart-4))\",\r\n    \"hsl(var(--chart-5))\",\r\n    \"hsl(var(--chart-6, #8884d8))\",\r\n    \"hsl(var(--chart-7, #82ca9d))\",\r\n    \"hsl(var(--chart-8, #ffc658))\",\r\n    \"hsl(var(--chart-9, #ff8042))\",\r\n    \"hsl(var(--chart-10, #a4de6c))\",\r\n  ];\r\n\r\n  const errorChartConfig = useMemo(() => {\r\n    return Object.fromEntries(\r\n      errorAnalysisData.map((entry: { key: string; name: string }, i: number) => [\r\n        entry.key,\r\n        { label: entry.name, color: errorPalette[i % errorPalette.length] }\r\n      ])\r\n    );\r\n  }, [errorAnalysisData]);\r\n\r\n  // Define a color palette for error types\r\n  const errorColors = [\r\n    '#EF4444', // red\r\n    '#F59E42', // orange\r\n    '#FBBF24', // yellow\r\n    '#10B981', // green\r\n    '#3B82F6', // blue\r\n    '#6366F1', // indigo\r\n    '#8B5CF6', // violet\r\n    '#EC4899', // pink\r\n    '#6B7280', // gray\r\n  ];\r\n\r\n  function toggleField(field: string) {\r\n    setSelectedFields(prev => prev.includes(field) ? prev.filter(f => f !== field) : [...prev, field]);\r\n  }\r\n\r\n  function toggleUploadModel(model: string) {\r\n    setUploadSelectedModel(model);\r\n  }\r\n\r\n  // Handle data source mode toggle\r\n  const handleModeToggle = (checked: boolean) => {\r\n    const newMode = checked ? 'mock' : 'real';\r\n    setIsMockMode(checked);\r\n    dataProvider.switchMode(newMode);\r\n    \r\n    // Show toast notification\r\n    toast({\r\n      title: \"Data Source Changed\",\r\n      description: `Switched to ${checked ? 'Mock Data' : 'Live API'} mode`,\r\n      variant: \"default\",\r\n    });\r\n    \r\n    // Refresh page to see changes\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (keyDialog.open) {\r\n      setEditKey('');\r\n    }\r\n  }, [keyDialog.open]);\r\n\r\n  // Add state for token/cost graph\r\n  const [tokenMetricType, setTokenMetricType] = useState<'total' | 'input' | 'output'>('total');\r\n  const [metricsData, setMetricsData] = useState<any>(null);\r\n\r\n  // Helper to combine date and time\r\n  function combineDateTime(date: Date | undefined, time: string): Date | undefined {\r\n    if (!date) return undefined;\r\n    const [h, m] = time.split(\":\").map(Number);\r\n    const d = new Date(date);\r\n    d.setUTCHours(h, m, 0, 0);\r\n    return d;\r\n  }\r\n\r\n  // Fetch metrics data\r\n  const fetchMetricsData = useCallback(async () => {\r\n    let range = 'auto';\r\n    let bucketParam = 'auto';\r\n    let from = combineDateTime(date?.from, timeFrom);\r\n    let to = combineDateTime(date?.to, timeTo);\r\n    if (from && to) {\r\n      const ms = to.getTime() - from.getTime();\r\n      const days = Math.ceil(ms / (24*60*60*1000));\r\n      const oneHour = 60 * 60 * 1000;\r\n      if (ms <= 2 * oneHour) bucketParam = '15min';\r\n      else if (ms <= 4 * oneHour) bucketParam = '30min';\r\n      else if (ms <= 24 * oneHour) bucketParam = 'hour';\r\n      else if (days <= 7) bucketParam = 'day';\r\n      else bucketParam = 'week';\r\n      // Use ISO strings for custom range\r\n      range = `${from.toISOString()},${to.toISOString()}`;\r\n    }\r\n    try {\r\n      const res = await fetch(`${config.apiBaseUrl}/api/pipeline/metrics?range=${range}&bucket=${bucketParam}`);\r\n      if (!res.ok) throw new Error('Failed to fetch metrics');\r\n      const data = await res.json();\r\n      setMetricsData(data);\r\n    } catch (err) {\r\n      // Suppress error logging and set metrics data to null if backend is unreachable\r\n      setMetricsData(null);\r\n    }\r\n  }, [date, timeFrom, timeTo]);\r\n\r\n  useEffect(() => {\r\n    fetchMetricsData();\r\n    const interval = setInterval(fetchMetricsData, config.pollingInterval);\r\n    return () => clearInterval(interval);\r\n  }, [fetchMetricsData]);\r\n\r\n  // Prepare chart data for tokens and cost with dynamic bucketing\r\n  function getDynamicBuckets(buckets: string[]) {\r\n    if (!buckets || buckets.length === 0) return { bucketLabels: [], bucketIndices: [] };\r\n    const times = buckets.map(b => new Date(b).getTime());\r\n    const minTime = Math.min(...times);\r\n    const maxTime = Math.max(...times);\r\n    const totalMs = maxTime - minTime;\r\n    const oneMin = 60 * 1000;\r\n    const fifteenMin = 15 * oneMin;\r\n    const thirtyMin = 30 * oneMin;\r\n    const oneHour = 60 * oneMin;\r\n    const oneDay = 24 * oneHour;\r\n    let bucketSizeMs = oneDay; // default: 1 day\r\n    let labelFormat = (d: Date) => d.toLocaleDateString('en-US', { timeZone: 'UTC' });\r\n    if (totalMs <= 2 * oneHour) {\r\n      bucketSizeMs = fifteenMin;\r\n      labelFormat = (d: Date) => `${d.getUTCHours()}:${d.getUTCMinutes().toString().padStart(2, '0')}`;\r\n    } else if (totalMs <= 4 * oneHour) {\r\n      bucketSizeMs = thirtyMin;\r\n      labelFormat = (d: Date) => `${d.getUTCHours()}:${d.getUTCMinutes().toString().padStart(2, '0')}`;\r\n    } else if (totalMs <= oneDay) {\r\n      bucketSizeMs = oneHour;\r\n      labelFormat = (d: Date) => d.getUTCHours() + ':00';\r\n    } else if (totalMs <= 3 * oneDay) {\r\n      bucketSizeMs = 6 * oneHour;\r\n      labelFormat = (d: Date) => `${d.getUTCMonth()+1}/${d.getUTCDate()} ${d.getUTCHours()}:00`;\r\n    } else if (totalMs <= 7 * oneDay) {\r\n      bucketSizeMs = 12 * oneHour;\r\n      labelFormat = (d: Date) => `${d.getUTCMonth()+1}/${d.getUTCDate()} ${d.getUTCHours()}:00`;\r\n    } else {\r\n      bucketSizeMs = oneDay;\r\n      labelFormat = (d: Date) => d.toLocaleDateString('en-US', { timeZone: 'UTC' });\r\n    }\r\n    // Build new buckets\r\n    const bucketLabels: string[] = [];\r\n    const bucketIndices: number[][] = [];\r\n    let bucketStart = minTime;\r\n    let i = 0;\r\n    while (bucketStart <= maxTime) {\r\n      const bucketEnd = bucketStart + bucketSizeMs;\r\n      const indices: number[] = [];\r\n      for (; i < times.length; i++) {\r\n        if (times[i] >= bucketStart && times[i] < bucketEnd) {\r\n          indices.push(i);\r\n        } else if (times[i] >= bucketEnd) {\r\n          break;\r\n        }\r\n      }\r\n      bucketLabels.push(labelFormat(new Date(bucketStart)));\r\n      bucketIndices.push(indices);\r\n      bucketStart = bucketEnd;\r\n    }\r\n    return { bucketLabels, bucketIndices };\r\n  }\r\n\r\n  const tokenChartData = useMemo(() => {\r\n    if (!metricsData) return [];\r\n    const { bucketLabels, bucketIndices } = getDynamicBuckets(metricsData.buckets);\r\n    return bucketLabels.map((label, idx) => {\r\n      const indices = bucketIndices[idx];\r\n      const sum = indices.reduce((acc, i) => acc + (metricsData.token_consumption[tokenMetricType][i] || 0), 0);\r\n      return { time: label, value: sum };\r\n    });\r\n  }, [metricsData, tokenMetricType]);\r\n\r\n  const costChartData = useMemo(() => {\r\n    if (!metricsData) return [];\r\n    const { bucketLabels, bucketIndices } = getDynamicBuckets(metricsData.buckets);\r\n    return bucketLabels.map((label, idx) => {\r\n      const indices = bucketIndices[idx];\r\n      const sum = indices.reduce((acc, i) => acc + (metricsData.cost[i] || 0), 0);\r\n      return { time: label, value: sum };\r\n    });\r\n  }, [metricsData]);\r\n\r\n  const selectedFile = useMemo(\r\n    () => csvData.find(e => e.id === selectedFileId) || null,\r\n    [csvData, selectedFileId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background text-foreground p-4 md:p-8\">\r\n      <header className=\"mb-8\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <span className=\"h-10 w-10 text-primary\"><Logo /></span>\r\n            {/* <h1 className=\"text-4xl font-headline font-bold tracking-tight\">\r\n              Genesis\r\n            </h1> */}\r\n          </div>\r\n          \r\n          {/* Data Source Indicator */}\r\n          <Badge \r\n            variant={isMockMode ? \"secondary\" : \"default\"} \r\n            className=\"flex items-center gap-1\"\r\n          >\r\n            {isMockMode ? (\r\n              <>\r\n                <Database className=\"h-3 w-3\" />\r\n                Mock Data\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Cloud className=\"h-3 w-3\" />\r\n                Live API\r\n              </>\r\n            )}\r\n          </Badge>\r\n        </div>\r\n        <p className=\"text-muted-foreground mt-1\">\r\n          Dashboard for data processing pipeline status.\r\n        </p>\r\n      </header>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} defaultValue=\"dashboard\">\r\n        <TabsList className=\"grid w-full grid-cols-3 md:w-[400px]\">\r\n          <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\r\n          <TabsTrigger value=\"upload\">Upload</TabsTrigger>\r\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n        </TabsList>\r\n        <TabsContent value=\"dashboard\" className=\"mt-6 space-y-6\">\r\n          {/* Remove old always-visible calendar and time pickers here */}\r\n          {/* Place the new date pickers above the throughput chart */}\r\n          <div className=\"flex flex-col md:flex-row gap-4 items-center mb-4\">\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button\r\n                  id=\"date\"\r\n                  variant={\"outline\"}\r\n                  className={cn(\r\n                    \"w-full sm:w-[260px] justify-start text-left font-normal\",\r\n                    !date && \"text-muted-foreground\"\r\n                  )}\r\n                >\r\n                  <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n                  {date?.from ? (\r\n                    date.to ? (\r\n                      <>\r\n                        {formatDate(date.from, \"LLL dd, y\")} -{\" \"}\r\n                        {formatDate(date.to, \"LLL dd, y\")}\r\n                      </>\r\n                    ) : (\r\n                      formatDate(date.from, \"LLL dd, y\")\r\n                    )\r\n                  ) : (\r\n                    <span>Pick a date</span>\r\n                  )}\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className=\"w-auto p-0\" align=\"end\">\r\n                <Calendar\r\n                  initialFocus\r\n                  mode=\"range\"\r\n                  defaultMonth={date?.from}\r\n                  selected={date}\r\n                  onSelect={setDate}\r\n                  numberOfMonths={2}\r\n                  toDate={new Date()}\r\n                />\r\n              </PopoverContent>\r\n            </Popover>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Label>From (UTC):</Label>\r\n              <Input type=\"time\" value={timeFrom} onChange={e => setTimeFrom(e.target.value)} />\r\n              <Label>To (UTC):</Label>\r\n              <Input type=\"time\" value={timeTo} onChange={e => setTimeTo(e.target.value)} />\r\n            </div>\r\n            <Button onClick={() => {\r\n              // Snap date range to selected times\r\n              if (date?.from && date?.to) {\r\n                setDate({\r\n                  from: combineDateTime(date.from, timeFrom),\r\n                  to: combineDateTime(date.to, timeTo),\r\n                });\r\n              }\r\n            }}>Apply</Button>\r\n          </div>\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <StatCard title=\"Processed Today\" value={todayStats.processedToday} Icon={Activity} description=\"Files reaching a terminal state today.\" />\r\n            <StatCard title=\"Success Rate Today\" value={todayStats.successRateToday} Icon={CheckCircle2} description=\"Of files processed today.\" />\r\n            <StatCard title=\"Files In Progress\" value={todayStats.inProgress} Icon={Loader} description=\"Currently running pipelines.\" />\r\n            <StatCard title=\"Total Files\" value={csvData.length} Icon={Files} description=\"Tracked in the system.\" />\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card className=\"shadow-lg\">\r\n              <CardHeader>\r\n                 <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-2\">\r\n                  <div>\r\n                    <CardTitle>Throughput</CardTitle>\r\n                    <CardDescription>Files processed and successful over time.</CardDescription>\r\n                  </div>\r\n                  {/* No date picker or download button here */}\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent className=\"pl-2\">\r\n                {throughputChartData.length > 0 ? (\r\n                  <ChartContainer config={{}} className=\"h-[250px] w-full\">\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart data={throughputChartData} margin={{ top: 5, right: 30, left: 0, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n                        <XAxis dataKey=\"day\" tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <YAxis allowDecimals={false} tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <RechartsTooltip\r\n                          cursor={{strokeDasharray: '3 3'}}\r\n                          content={<ChartTooltipContent indicator=\"dot\" />}\r\n                        />\r\n                        <RechartsLegend verticalAlign=\"top\" height={36} />\r\n                        <Line type=\"monotone\" dataKey=\"successfully\" stroke=\"var(--color-successfully, #4ade80)\" strokeWidth={2} activeDot={{ r: 8 }} dot={{ r: 4, stroke: 'var(--color-successfully, #4ade80)', strokeWidth: 2, fill: 'white' }} connectNulls={true} />\r\n                        <Line type=\"monotone\" dataKey=\"processed\" stroke=\"var(--color-processed, #60a5fa)\" strokeWidth={2} activeDot={{ r: 8 }} dot={{ r: 4, stroke: 'var(--color-processed, #60a5fa)', strokeWidth: 2, fill: 'white' }} connectNulls={true} />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </ChartContainer>\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center justify-center h-[250px] text-center text-muted-foreground\">\r\n                      <FileQuestion className=\"w-12 h-12 mb-4\" />\r\n                      <h3 className=\"text-lg font-semibold\">No Data Available</h3>\r\n                      <p className=\"text-sm\">There are no processed files in the selected date range.</p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"shadow-lg\">\r\n                <CardHeader>\r\n                    <CardTitle>Error Analysis</CardTitle>\r\n                    <CardDescription>Breakdown of common failure points.</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {errorAnalysisData.length > 0 ? (\r\n                        <ChartContainer config={errorChartConfig}>\r\n                            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                <PieChart>\r\n                                    <RechartsTooltip\r\n                                        cursor={{strokeDasharray: '3 3'}}\r\n                                        content={<ChartTooltipContent nameKey=\"name\" hideLabel />}\r\n                                    />\r\n                                    <Pie data={errorAnalysisData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} labelLine={false} label={({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\r\n                                        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n                                        const x = cx + radius * Math.cos(-midAngle * (Math.PI / 180));\r\n                                        const y = cy + radius * Math.sin(-midAngle * (Math.PI / 180));\r\n                                        return (percent > 0.05) ? <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                                            {`${(percent * 100).toFixed(0)}%`}\r\n                                        </text> : null;\r\n                                    }}>\r\n                                        {(errorAnalysisData || []).map((entry: any, idx: number) => (\r\n                                            <Cell key={`cell-${entry.key}`} fill={errorColors[idx % errorColors.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                    <RechartsLegend verticalAlign=\"bottom\" height={36} iconSize={10} />\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </ChartContainer>\r\n                    ) : (\r\n                        <div className=\"flex flex-col items-center justify-center h-[250px] text-center text-muted-foreground\">\r\n                            <CheckCircle2 className=\"w-12 h-12 mb-4 text-green-500\" />\r\n                            <h3 className=\"text-lg font-semibold\">No Errors Found</h3>\r\n                            <p className=\"text-sm\">Everything is running smoothly!</p>\r\n                        </div>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Token Consumption Graph */}\r\n            <Card className=\"shadow-lg\">\r\n              <CardHeader>\r\n                <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-2\">\r\n                  <div>\r\n                    <CardTitle>Token Consumption</CardTitle>\r\n                    <CardDescription>Cumulative tokens used per {metricsData && metricsData.buckets.length > 0 && metricsData.buckets[0].length > 13 ? 'hour' : 'day'}.</CardDescription>\r\n                  </div>\r\n                  <div className=\"flex gap-2 mt-2 sm:mt-0\">\r\n                    <Button size=\"sm\" variant={tokenMetricType === 'total' ? 'default' : 'outline'} onClick={() => setTokenMetricType('total')}>Total</Button>\r\n                    <Button size=\"sm\" variant={tokenMetricType === 'input' ? 'default' : 'outline'} onClick={() => setTokenMetricType('input')}>Input</Button>\r\n                    <Button size=\"sm\" variant={tokenMetricType === 'output' ? 'default' : 'outline'} onClick={() => setTokenMetricType('output')}>Output</Button>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                {tokenChartData.length > 0 ? (\r\n                  <ChartContainer config={{ token: { label: tokenMetricType.charAt(0).toUpperCase() + tokenMetricType.slice(1) + ' Tokens', color: 'hsl(var(--chart-1))' } }} className=\"h-[250px] w-full\">\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart data={tokenChartData} margin={{ top: 5, right: 30, left: 0, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n                        <XAxis dataKey=\"time\" tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <YAxis allowDecimals={false} tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <RechartsTooltip cursor={{strokeDasharray: '3 3'}} formatter={v => v.toLocaleString()} />\r\n                        <RechartsLegend verticalAlign=\"top\" height={36} />\r\n                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"var(--color-token)\" strokeWidth={2} activeDot={{ r: 8 }} name={tokenMetricType.charAt(0).toUpperCase() + tokenMetricType.slice(1) + ' Tokens'} />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </ChartContainer>\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center justify-center h-[250px] text-center text-muted-foreground\">\r\n                    <FileQuestion className=\"w-12 h-12 mb-4\" />\r\n                    <h3 className=\"text-lg font-semibold\">No Data Available</h3>\r\n                    <p className=\"text-sm\">No token data in the selected date range.</p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n            {/* Cost Estimation Graph */}\r\n            <Card className=\"shadow-lg\">\r\n              <CardHeader>\r\n                <CardTitle>Cost Estimation</CardTitle>\r\n                <CardDescription>Cumulative estimated cost per {metricsData && metricsData.buckets.length > 0 && metricsData.buckets[0].length > 13 ? 'hour' : 'day'}.</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                {costChartData.length > 0 ? (\r\n                  <ChartContainer config={{ cost: { label: 'Estimated Cost ($)', color: 'hsl(var(--chart-2))' } }} className=\"h-[250px] w-full\">\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart data={costChartData} margin={{ top: 5, right: 30, left: 0, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n                        <XAxis dataKey=\"time\" tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <YAxis allowDecimals={true} tickLine={false} axisLine={false} tickMargin={8} stroke=\"hsl(var(--muted-foreground))\" fontSize={12} />\r\n                        <RechartsTooltip cursor={{strokeDasharray: '3 3'}} formatter={v => typeof v === 'number' ? `$${v.toFixed(4)}` : v} />\r\n                        <RechartsLegend verticalAlign=\"top\" height={36} />\r\n                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"var(--color-cost)\" strokeWidth={2} activeDot={{ r: 8 }} name=\"Estimated Cost ($)\" />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </ChartContainer>\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center justify-center h-[250px] text-center text-muted-foreground\">\r\n                    <FileQuestion className=\"w-12 h-12 mb-4\" />\r\n                    <h3 className=\"text-lg font-semibold\">No Data Available</h3>\r\n                    <p className=\"text-sm\">No cost data in the selected date range.</p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <Card className=\"shadow-xl\" ref={processingStatusRef}>\r\n            <CardHeader>\r\n              <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n                <CardTitle className=\"text-2xl\">Processing Status</CardTitle>\r\n                <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full md:w-auto flex-wrap\">\r\n                  <div className=\"relative w-full sm:w-auto sm:flex-grow\">\r\n                    <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Filter by filename...\"\r\n                      value={filterText}\r\n                      onChange={(e) => setFilterText(e.target.value)}\r\n                      className=\"pl-10 w-full\"\r\n                      aria-label=\"Filter by filename\"\r\n                    />\r\n                  </div>\r\n                  <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n                      <SelectTrigger className=\"w-full sm:w-[150px]\">\r\n                        <SelectValue placeholder=\"Filter by status\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"all\">All Statuses</SelectItem>\r\n                        <SelectItem value=\"completed\">Completed</SelectItem>\r\n                        <SelectItem value=\"running\">Running</SelectItem>\r\n                        <SelectItem value=\"error\">Error</SelectItem>\r\n                        <SelectItem value=\"pending\">Pending</SelectItem>\r\n                      </SelectContent>\r\n                  </Select>\r\n                  <Button variant=\"ghost\" onClick={handleClearFilters} className=\"w-full sm:w-auto\">\r\n                      <X className=\"mr-2 h-4 w-4\" /> Clear\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isInitialLoading ? (\r\n                <div className=\"flex flex-col items-center justify-center h-[500px] text-center text-muted-foreground\">\r\n                  <Loader2 className=\"w-12 h-12 mb-4 animate-spin\" />\r\n                  <h3 className=\"text-lg font-semibold\">Loading Pipeline Data</h3>\r\n                  <p className=\"text-sm\">Fetching processing status from backend...</p>\r\n                </div>\r\n              ) : error ? (\r\n                <div className=\"flex flex-col items-center justify-center h-[500px] text-center text-muted-foreground\">\r\n                  <AlertTriangle className=\"w-12 h-12 mb-4 text-red-500\" />\r\n                  <h3 className=\"text-lg font-semibold\">Error Loading Data</h3>\r\n                  <p className=\"text-sm\">{error}</p>\r\n                  <Button onClick={() => fetchPipelineData()} className=\"mt-4\">\r\n                    <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                    Retry\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <CsvStatusTable \r\n                  data={filteredData} \r\n                  sortConfig={sortConfig} \r\n                  requestSort={requestSort} \r\n                  now={currentTime}\r\n                  onDownload={handleDownload}\r\n                  onRowClick={handleShowFileDetails}\r\n                  onRetry={handleRetry}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        <TabsContent value=\"upload\" className=\"mt-6\">\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle>Upload Files</CardTitle>\r\n                    <CardDescription>Drag and drop files here or click to select files to add them to the processing queue.</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"flex flex-col gap-4 mb-4\">\r\n                      <div className=\"flex items-center gap-4\">\r\n                        <Label className=\"text-base\">AI Model Override</Label>\r\n                        <Select value={uploadSelectedModel} onValueChange={setUploadSelectedModel}>\r\n                          <SelectTrigger className=\"w-[220px]\">\r\n                            <SelectValue placeholder=\"Select model...\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            {availableModels.map(model => (\r\n                              <SelectItem key={model} value={model}>{model}</SelectItem>\r\n                            ))}\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-4\">\r\n                        <Label className=\"text-base\">Priority</Label>\r\n                        <Popover>\r\n                          <PopoverTrigger asChild>\r\n                            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\r\n                              {uploadPriority}\r\n                              <ChevronDown className=\"h-4 w-4\" />\r\n                            </Button>\r\n                          </PopoverTrigger>\r\n                          <PopoverContent className=\"min-w-[120px]\">\r\n                            {['Normal', 'High'].map(option => (\r\n                              <div key={option} className=\"flex items-center gap-2 cursor-pointer hover:bg-muted px-2 py-1 rounded\" onClick={() => setUploadPriority(option as 'Normal' | 'High')}>\r\n                                <span className=\"inline-block w-4\">{uploadPriority === option && <Check className=\"h-4 w-4 text-primary\" />}</span>\r\n                                <span>{option}</span>\r\n                              </div>\r\n                            ))}\r\n                          </PopoverContent>\r\n                        </Popover>\r\n                      </div>\r\n                    </div>\r\n                    <FileUpload onFileUpload={files => handleFileUpload(files, uploadSelectedModel, uploadPriority === 'High')} />\r\n                </CardContent>\r\n            </Card>\r\n        </TabsContent>\r\n        <TabsContent value=\"settings\" className=\"mt-6\">\r\n          <div className=\"space-y-8\">\r\n            {/* Data Source Section */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Settings2 className=\"h-5 w-5\" />\r\n                  Data Source\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  Configure how the application loads data. Switch between mock data for development and live API for production.\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div className=\"space-y-1\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {isMockMode ? (\r\n                        <Database className=\"h-4 w-4 text-blue-500\" />\r\n                      ) : (\r\n                        <Cloud className=\"h-4 w-4 text-green-500\" />\r\n                      )}\r\n                      <Label htmlFor=\"mock-mode-toggle\" className=\"text-base font-medium\">\r\n                        {isMockMode ? 'Mock Data Mode' : 'Live API Mode'}\r\n                      </Label>\r\n                    </div>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      {isMockMode \r\n                        ? 'Using simulated data for development and testing'\r\n                        : 'Connected to live backend API for real data'\r\n                      }\r\n                    </p>\r\n                  </div>\r\n                  <Switch \r\n                    id=\"mock-mode-toggle\"\r\n                    checked={isMockMode}\r\n                    onCheckedChange={handleModeToggle}\r\n                  />\r\n                </div>\r\n                \r\n                {/* Status Information */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 pt-2 border-t\">\r\n                  <div className=\"space-y-1\">\r\n                    <p className=\"text-sm font-medium\">Current Mode</p>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      {isMockMode ? 'Development (Mock Data)' : 'Production (Live API)'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"space-y-1\">\r\n                    <p className=\"text-sm font-medium\">Data Updates</p>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      {isMockMode ? 'Simulated real-time changes' : 'WebSocket & polling from backend'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-2 pt-2 border-t\">\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    size=\"sm\"\r\n                    className=\"flex items-center gap-2\"\r\n                    onClick={() => {\r\n                      // TODO: Implement refresh logic\r\n                      console.log('Refresh clicked - mode:', isMockMode ? 'mock' : 'live');\r\n                    }}\r\n                  >\r\n                    <RefreshCw className=\"h-4 w-4\" />\r\n                    Refresh Data\r\n                  </Button>\r\n                  \r\n                  {isMockMode && (\r\n                    <Button \r\n                      variant=\"outline\" \r\n                      size=\"sm\"\r\n                      className=\"flex items-center gap-2\"\r\n                      onClick={() => {\r\n                        // TODO: Implement reset logic\r\n                        console.log('Reset mock data clicked');\r\n                      }}\r\n                    >\r\n                      <Settings2 className=\"h-4 w-4\" />\r\n                      Reset Mock Data\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Notifications Section */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Notifications</CardTitle>\r\n                <CardDescription>Configure how and when you receive notifications.</CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex flex-col gap-4\">\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <Label htmlFor=\"notif-email\" className=\"text-base\">Email Notifications</Label>\r\n                    <Switch id=\"notif-email\" />\r\n                    <Input type=\"email\" placeholder=\"your@email.com\" className=\"w-64\" />\r\n                  </div>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <Label htmlFor=\"notif-telegram\" className=\"text-base\">Telegram Notifications</Label>\r\n                    <Switch id=\"notif-telegram\" />\r\n                    <Input type=\"text\" placeholder=\"@yourhandle or chat id\" className=\"w-64\" />\r\n                  </div>\r\n                  <div className=\"border-t my-2\" />\r\n                  <div className=\"flex flex-col gap-2\">\r\n                    <Label className=\"text-base\">Advanced Options</Label>\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <span className=\"text-base\">Notify on pipeline failure</span>\r\n                      <Switch id=\"notif-failure\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-2\">\r\n                      <div className=\"flex flex-wrap gap-2 items-center min-h-[40px]\">\r\n                        {selectedFields.map(field => (\r\n                          <div\r\n                            key={field}\r\n                            className=\"relative group bg-muted px-3 py-1 rounded-full flex items-center text-sm font-medium cursor-pointer hover:bg-primary/10 transition-colors\"\r\n                          >\r\n                            {field}\r\n                            <button\r\n                              className=\"absolute -top-2 -right-2 bg-white rounded-full p-0.5 opacity-0 group-hover:opacity-100 transition-opacity border shadow\"\r\n                              style={{ fontSize: 10 }}\r\n                              onClick={e => { e.stopPropagation(); setSelectedFields(prev => prev.filter(f => f !== field)); }}\r\n                              tabIndex={-1}\r\n                              aria-label={`Remove ${field}`}\r\n                            >\r\n                              <X className=\"h-3 w-3 text-red-500\" />\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                        <div className=\"relative\">\r\n                          <button\r\n                            className=\"bg-muted px-2 py-1 rounded-full flex items-center text-sm font-medium hover:bg-primary/10 transition-colors border\"\r\n                            onClick={() => setMultiSelectOpen(v => !v)}\r\n                            aria-label=\"Add field\"\r\n                            type=\"button\"\r\n                          >\r\n                            <Plus className=\"h-4 w-4\" />\r\n                          </button>\r\n                          {multiSelectOpen && (\r\n                            <div className=\"absolute z-10 mt-2 bg-white border rounded shadow-lg p-2 min-w-[160px] max-h-48 overflow-auto\">\r\n                              {SENSITIVE_FIELDS.filter((f: string) => !selectedFields.includes(f)).map((field: string) => (\r\n                                <div key={field} className=\"flex items-center gap-2 cursor-pointer hover:bg-muted px-2 py-1 rounded\" onClick={() => { setSelectedFields(prev => [...prev, field]); setMultiSelectOpen(false); }}>\r\n                                  <span>{field}</span>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 mt-2\">\r\n                        <Button\r\n                          variant={notifyLogic === 'AND' ? 'default' : 'outline'}\r\n                          size=\"sm\"\r\n                          onClick={() => setNotifyLogic('AND')}\r\n                          className={notifyLogic === 'AND' ? 'font-bold' : ''}\r\n                        >\r\n                          AND\r\n                        </Button>\r\n                        <Button\r\n                          variant={notifyLogic === 'OR' ? 'default' : 'outline'}\r\n                          size=\"sm\"\r\n                          onClick={() => setNotifyLogic('OR')}\r\n                          className={notifyLogic === 'OR' ? 'font-bold' : ''}\r\n                        >\r\n                          OR\r\n                        </Button>\r\n                        <span className=\"text-xs text-muted-foreground ml-2\">Send notification if <b>{notifyLogic}</b> of the selected fields are present in a CSV</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n            {/* AI Models Table Section */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>AI Models & API Keys</CardTitle>\r\n                <CardDescription>Manage your API keys and view model details.</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <table className=\"min-w-full border-collapse\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left p-2\">Model</th>\r\n                      <th className=\"text-right p-2\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {aiModels.map(model => (\r\n                      <tr key={model.name} className={`border-t ${activeModel === model.name ? 'bg-primary/10' : ''}`}>\r\n                        <td className=\"p-2 font-medium\">{model.name}</td>\r\n                        <td className=\"p-2 text-right\">\r\n                          <div className=\"flex items-center justify-end gap-2\">\r\n                            <Button\r\n                              variant={activeModel === model.name ? 'default' : 'outline'}\r\n                              size=\"icon\"\r\n                              onClick={() => setActiveModel(model.name)}\r\n                              aria-label={activeModel === model.name ? 'Active model' : 'Activate model'}\r\n                              className={activeModel === model.name ? 'font-bold' : ''}\r\n                            >\r\n                              <Check className={`h-4 w-4 ${activeModel === model.name ? 'font-bold' : ''}`} />\r\n                            </Button>\r\n                            <Button variant=\"ghost\" size=\"icon\" onClick={() => setModelInfoDialog({ open: true, model: model.name })}>\r\n                              <Info className=\"h-4 w-4\" />\r\n                            </Button>\r\n                            <Button variant=\"ghost\" size=\"icon\" onClick={() => setKeyDialog({ open: true, model: model.name })}>\r\n                              <Key className=\"h-4 w-4\" />\r\n                            </Button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n      \r\n      <footer className=\"mt-12 text-center text-sm text-muted-foreground\">\r\n        <p>&copy; {new Date().getFullYear()} Genesis. All rights reserved.</p>\r\n      </footer>\r\n      <FileDetailDialog entry={selectedFile} isOpen={isDetailModalOpen} onOpenChange={setIsDetailModalOpen} />\r\n      <AlertDialog open={isAnalysisModalOpen} onOpenChange={setIsAnalysisModalOpen}>\r\n        <AlertDialogContent>\r\n            <AlertDialogHeader>\r\n                <AlertDialogTitle>Log Analysis Summary</AlertDialogTitle>\r\n                <AlertDialogDescription>\r\n                    {analysisResult?.summary}\r\n                </AlertDialogDescription>\r\n            </AlertDialogHeader>\r\n            <div className=\"text-sm space-y-2\">\r\n                <p><strong>Errors Found:</strong> {analysisResult?.errorCount}</p>\r\n                <p><strong>Warnings Found:</strong> {analysisResult?.warningCount}</p>\r\n                {analysisResult?.criticalError && <p><strong>Critical Error:</strong> {analysisResult.criticalError}</p>}\r\n                {analysisResult?.recommendation && <p><strong>Recommendation:</strong> {analysisResult.recommendation}</p>}\r\n            </div>\r\n            <AlertDialogFooter>\r\n                <AlertDialogAction onClick={() => setIsAnalysisModalOpen(false)}>Close</AlertDialogAction>\r\n            </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n      {/* Info Dialog rendered outside the table for correct overlay behavior */}\r\n      <Dialog open={modelInfoDialog.open} onOpenChange={open => setModelInfoDialog({ open, model: open ? modelInfoDialog.model : null })}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>{modelInfoDialog.model} Info</DialogTitle>\r\n          </DialogHeader>\r\n          {aiModels.filter(m => m.name === modelInfoDialog.model).map(model => (\r\n            <div key={model.name} className=\"space-y-2\">\r\n              <div><b>Pricing:</b> {model.pricing}</div>\r\n              <div><b>Release Date:</b> {model.release}</div>\r\n              <div><b>Details:</b> {model.details}</div>\r\n              <div><b>More Info:</b> <a href={model.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 underline\">{model.url}</a></div>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n      {/* Key Dialog rendered outside the table for correct overlay behavior */}\r\n      <Dialog open={keyDialog.open} onOpenChange={open => setKeyDialog({ open, model: open ? keyDialog.model : null })}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>{keyDialog.model} API Key</DialogTitle>\r\n          </DialogHeader>\r\n          {aiModels.filter(m => m.name === keyDialog.model).map(model => (\r\n            <div key={model.name}>\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <span className=\"font-mono bg-muted px-2 py-1 rounded\">\r\n                  {showFullKey[model.name] ? modelKeys[model.name] : censorKey(modelKeys[model.name] || '')}\r\n                </span>\r\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => setShowFullKey(prev => ({ ...prev, [model.name]: !prev[model.name] }))}>\r\n                  {showFullKey[model.name] ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => handleCopyKey(model.name)}>\r\n                  <Copy className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditKey(model.name)}>\r\n                  <Pencil className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n              <div className=\"flex gap-2 items-center\">\r\n                <Input value={editKey} onChange={e => setEditKey(e.target.value)} className=\"w-full\" />\r\n                <Button onClick={() => handleSaveKey(model.name)} variant=\"secondary\">Save</Button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}